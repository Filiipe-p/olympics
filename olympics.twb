<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1108.0821                               -->
<workbook original-version='18.1' source-build='2022.3.1 (20223.22.1108.0821)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Medal Parameter' datatype='string' name='[Medal Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bronze&quot;'>
        <calculation class='tableau' formula='&quot;Bronze&quot;' />
        <members>
          <member value='&quot;Bronze&quot;' />
          <member value='&quot;Gold&quot;' />
          <member value='&quot;NA&quot;' />
          <member value='&quot;Silver&quot;' />
        </members>
      </column>
      <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brazil&quot;'>
        <calculation class='tableau' formula='&quot;Brazil&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;American Samoa&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Antigua&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Boliva&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Cook Islands&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czech Republic&quot;' />
          <member value='&quot;Democratic Republic of the Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guam&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Individual Olympic Athletes&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Ivory Coast&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macedonia&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;NA&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nauru&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Korea&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palau&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Republic of Congo&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Kitts&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Vincent&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Swaziland&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;UK&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;USA&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Virgin Islands, British&quot;' />
          <member value='&quot;Virgin Islands, US&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Region Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Medal Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='athlete_events+' inline='true' name='federated.0v5k1j91xx0fnf13ckub004uw450' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_events' name='textscan.0bppxzb0koodzh12mn0ie1m1szu6'>
            <connection class='textscan' directory='C:/Users/filip/OneDrive/Área de Trabalho/IronHack/projeto viz/olympics' filename='athlete_events.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Sex' ordinal='2' />
            <column datatype='integer' name='Age' ordinal='3' />
            <column datatype='string' name='Height' ordinal='4' />
            <column datatype='real' name='Weight' ordinal='5' />
            <column datatype='string' name='Team' ordinal='6' />
            <column datatype='string' name='NOC' ordinal='7' />
            <column datatype='string' name='Games' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='string' name='Season' ordinal='10' />
            <column datatype='string' name='City' ordinal='11' />
            <column datatype='string' name='Sport' ordinal='12' />
            <column datatype='string' name='Event' ordinal='13' />
            <column datatype='string' name='Medal' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='string' name='Sex' ordinal='2' />
              <column datatype='integer' name='Age' ordinal='3' />
              <column datatype='string' name='Height' ordinal='4' />
              <column datatype='real' name='Weight' ordinal='5' />
              <column datatype='string' name='Team' ordinal='6' />
              <column datatype='string' name='NOC' ordinal='7' />
              <column datatype='string' name='Games' ordinal='8' />
              <column datatype='integer' name='Year' ordinal='9' />
              <column datatype='string' name='Season' ordinal='10' />
              <column datatype='string' name='City' ordinal='11' />
              <column datatype='string' name='Sport' ordinal='12' />
              <column datatype='string' name='Event' ordinal='13' />
              <column datatype='string' name='Medal' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='noc_regions.csv' table='[noc_regions#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='NOC' ordinal='0' />
              <column datatype='string' name='region' ordinal='1' />
              <column datatype='string' name='notes' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='pop.csv' table='[pop#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Population' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age]' value='[athlete_events.csv].[Age]' />
          <map key='[City]' value='[athlete_events.csv].[City]' />
          <map key='[Country]' value='[pop.csv].[Country]' />
          <map key='[Event]' value='[athlete_events.csv].[Event]' />
          <map key='[F1]' value='[pop.csv].[F1]' />
          <map key='[Games]' value='[athlete_events.csv].[Games]' />
          <map key='[Height]' value='[athlete_events.csv].[Height]' />
          <map key='[ID]' value='[athlete_events.csv].[ID]' />
          <map key='[Medal]' value='[athlete_events.csv].[Medal]' />
          <map key='[NOC (noc_regions.csv)]' value='[noc_regions.csv].[NOC]' />
          <map key='[NOC]' value='[athlete_events.csv].[NOC]' />
          <map key='[Name]' value='[athlete_events.csv].[Name]' />
          <map key='[Population]' value='[pop.csv].[Population]' />
          <map key='[Season]' value='[athlete_events.csv].[Season]' />
          <map key='[Sex]' value='[athlete_events.csv].[Sex]' />
          <map key='[Sport]' value='[athlete_events.csv].[Sport]' />
          <map key='[Team]' value='[athlete_events.csv].[Team]' />
          <map key='[Unnamed: 0]' value='[pop.csv].[Unnamed: 0]' />
          <map key='[Weight]' value='[athlete_events.csv].[Weight]' />
          <map key='[Year]' value='[athlete_events.csv].[Year]' />
          <map key='[notes]' value='[noc_regions.csv].[notes]' />
          <map key='[region]' value='[noc_regions.csv].[region]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Games</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Games]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Games</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC (noc_regions.csv)]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[notes]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>notes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Age]' peg='0' size='100' />
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Medal/100000hab' datatype='real' name='[Calculation_920141731385315328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(COUNT([Medal])/SUM([Population]))*100000' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
      <column caption='NOC (noc regions.csv)' datatype='string' name='[NOC (noc_regions.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='noc_regions.csv' datatype='table' name='[__tableau_internal_object_id__].[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='pop.csv' datatype='table' name='[__tableau_internal_object_id__].[pop.csv_E17D725E4117453FA1CDFC2740EC445F]' role='measure' type='quantitative' />
      <column caption='Notes' datatype='string' name='[notes]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age]' derivation='Max' name='[max:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sport]' derivation='Max' name='[max:Sport:nk]' pivot='key' type='nominal' />
      <column-instance column='[Age]' derivation='Min' name='[min:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <group caption='Action (Medal)' hidden='true' name='[Action (Medal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Medal]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[region]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Individual Olympic Athletes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Kitts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin Islands, US&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boliva&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virgin Islands, British&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Short Track Speed Skating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aeronautics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Art Competitions&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Racquets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equestrianism&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobsleigh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ski Jumping&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skeleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freestyle Skiing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rugby Sevens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Curling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordic Combined&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine Skiing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tug-Of-War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Figure Skating&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Speed Skating&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cross Country Skiing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motorboating&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cycling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trampolining&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpinism&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Military Ski Patrol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biathlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeu De Paume&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canoeing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Sport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Short Track Speed Skating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aeronautics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Art Competitions&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Racquets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equestrianism&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobsleigh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ski Jumping&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skeleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freestyle Skiing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rugby Sevens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Curling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordic Combined&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine Skiing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tug-Of-War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Figure Skating&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Speed Skating&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cross Country Skiing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motorboating&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cycling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trampolining&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpinism&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Military Ski Patrol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biathlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeu De Paume&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canoeing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0v5k1j91xx0fnf13ckub004uw450].[min:Age:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0v5k1j91xx0fnf13ckub004uw450]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0v5k1j91xx0fnf13ckub004uw450].[max:Age:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='ID' />
        <field-sort-custom-order field='Name' />
        <field-sort-custom-order field='Sex' />
        <field-sort-custom-order field='Age' />
        <field-sort-custom-order field='Height' />
        <field-sort-custom-order field='Weight' />
        <field-sort-custom-order field='Team' />
        <field-sort-custom-order field='NOC' />
        <field-sort-custom-order field='Games' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Season' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Sport' />
        <field-sort-custom-order field='Event' />
        <field-sort-custom-order field='Medal' />
        <field-sort-custom-order field='Calculation_96264474291777539' />
        <field-sort-custom-order field='Calculation_96264474289586178' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='athlete_events.csv' id='athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D'>
            <properties context=''>
              <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='string' name='Sex' ordinal='2' />
                  <column datatype='integer' name='Age' ordinal='3' />
                  <column datatype='string' name='Height' ordinal='4' />
                  <column datatype='real' name='Weight' ordinal='5' />
                  <column datatype='string' name='Team' ordinal='6' />
                  <column datatype='string' name='NOC' ordinal='7' />
                  <column datatype='string' name='Games' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='string' name='Season' ordinal='10' />
                  <column datatype='string' name='City' ordinal='11' />
                  <column datatype='string' name='Sport' ordinal='12' />
                  <column datatype='string' name='Event' ordinal='13' />
                  <column datatype='string' name='Medal' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='noc_regions.csv' id='noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2'>
            <properties context=''>
              <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='noc_regions.csv' table='[noc_regions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='NOC' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='string' name='notes' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='pop.csv' id='pop.csv_E17D725E4117453FA1CDFC2740EC445F'>
            <properties context=''>
              <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='pop.csv' table='[pop#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Population' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[NOC]' />
              <expression op='[NOC (noc_regions.csv)]' />
            </expression>
            <first-end-point object-id='athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D' />
            <second-end-point object-id='noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[region]' />
              <expression op='[Country]' />
            </expression>
            <first-end-point object-id='noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2' />
            <second-end-point object-id='pop.csv_E17D725E4117453FA1CDFC2740EC445F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <edit-parameter-action caption='Region Parameter' name='[Action1_A5199573FDAF482798771D77B8456714]'>
      <activation type='on-select' />
      <source dashboard='Medal/100khab' type='sheet' worksheet='Medal/pop map' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='assign-fixed-value' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' />
        <param name='target-parameter' value='[Parameters].[Region Parameter]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Age/Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]'>
            <groupfilter function='level-members' level='[none:Sport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{301873AD-0243-4A44-A7F2-252D360ADC6E}' />
    </worksheet>
    <worksheet name='Age/Year 1970'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='level-members' level='[none:Medal:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]'>
            <groupfilter function='level-members' level='[none:Sport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]' included-values='in-range'>
            <min>1970</min>
            <max>2016</max>
          </filter>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]' field-type='quantitative' max='27.578442731428492' min='15.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{569222DF-DE58-4393-8618-EE289B481AC0}' />
    </worksheet>
    <worksheet name='Medal/pop bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column caption='Medal/100000hab' datatype='real' name='[Calculation_920141731385315328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([Medal])/SUM([Population]))*100000' />
            </column>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_920141731385315328]' derivation='User' name='[usr:Calculation_920141731385315328:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' />
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]</cols>
      </table>
      <simple-id uuid='{7A051B6B-82A0-4BE2-82AB-FFC6613D7BD9}' />
    </worksheet>
    <worksheet name='Medal/pop map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Medalhas por 100.000 habitantes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column caption='Medal/100000hab' datatype='real' name='[Calculation_920141731385315328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([Medal])/SUM([Population]))*100000' />
            </column>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_920141731385315328]' derivation='User' name='[usr:Calculation_920141731385315328:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='24005007.05938451' min='-16070009.626193985' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='14393658.420599964' min='-7086995.3481562147' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' />
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' />
              <geometry column='[federated.0v5k1j91xx0fnf13ckub004uw450].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3EFB12F-75B0-41A8-9522-0B8E89C32C6A}' />
    </worksheet>
    <worksheet name='Medalha/País'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='athlete_events.csv' datatype='integer' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='20357764.219105922' min='-16781991.374641996' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='15788052.299747065' min='-8971785.5006521884' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
              <lod column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' />
              <geometry column='[federated.0v5k1j91xx0fnf13ckub004uw450].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2D34946C-CB72-4838-A7A5-6D9BB48A61E6}' />
    </worksheet>
    <worksheet name='Medalha/País bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='athlete_events.csv' datatype='integer' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v5k1j91xx0fnf13ckub004uw450].[cnt:Medal:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]</cols>
      </table>
      <simple-id uuid='{DE326CA9-A86F-469B-B4EE-9C8098CF790E}' />
    </worksheet>
    <worksheet name='Medals/Sport'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Medalhas por esporte</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Brazil&quot;'>
              <calculation class='tableau' formula='&quot;Brazil&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='athlete_events.csv' datatype='integer' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]'>
            <groupfilter expression='[region]=[Parameters].[Region Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B53B35AE-9AE1-4E10-869E-B7CAA905093A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='AGE/YEAR 70 DASH'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
      </datasources>
      <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
        <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
        <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='915'>
            <zone h='98170' id='5' type-v2='layout-basic' w='88018' x='545' y='915'>
              <zone h='98170' id='3' name='Age/Year 1970' w='88018' x='545' y='915'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98170' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='915' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6064' id='8' mode='checkdropdown' name='Age/Year 1970' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type-v2='filter' values='relevant' w='16814' x='70320' y='41648' />
        <zone h='5378' id='13' mode='checkdropdown' name='Age/Year 1970' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type-v2='filter' values='database' w='10960' x='73928' y='23227' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='22' param='vert' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone h='6064' id='8' mode='checkdropdown' name='Age/Year 1970' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type-v2='filter' values='relevant' w='16814' x='70320' y='41648'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5378' id='13' mode='checkdropdown' name='Age/Year 1970' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type-v2='filter' values='database' w='10960' x='73928' y='23227'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98170' id='3' is-fixed='true' name='Age/Year 1970' w='88018' x='545' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8DFFCB10-BA38-46BB-960E-B76607F2AA79}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='AGE/YEAR DASH'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
      </datasources>
      <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
        <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
        <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='915'>
            <zone h='98170' id='5' type-v2='layout-basic' w='98910' x='545' y='915'>
              <zone h='98170' id='3' name='Age/Year' w='98910' x='545' y='915'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6522' id='8' mode='checkdropdown' name='Age/Year' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type-v2='filter' values='relevant' w='16814' x='76174' y='44508' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='17' param='vert' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone h='6522' id='8' mode='checkdropdown' name='Age/Year' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type-v2='filter' values='relevant' w='16814' x='76174' y='44508'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98170' id='3' is-fixed='true' name='Age/Year' w='98910' x='545' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{984244FA-6F1E-4C29-B410-8FF3713D4F10}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Medal/100khab'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
      </datasources>
      <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
        <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
        <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='15' param='horz' type-v2='layout-flow' w='98910' x='545' y='915'>
            <zone h='98170' id='13' type-v2='layout-basic' w='98910' x='545' y='915'>
              <zone h='94508' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone h='94508' id='5' type-v2='layout-basic' w='98910' x='545' y='915'>
                  <zone h='94508' id='3' name='Medal/pop map' w='98910' x='545' y='915'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='3662' id='11' param='horz' type-v2='layout-flow' w='98910' x='545' y='95423'>
                <zone fixed-size='331' h='3662' id='10' is-fixed='true' name='Medal/pop map' pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type-v2='color' w='98910' x='545' y='95423'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='331' h='84439' id='12' is-fixed='true' name='Medals/Sport' w='12389' x='86794' y='5835'>
          <layout-cache fixed-size-h='364' fixed-size-w='199' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='4920' id='24' mode='checkdropdown' name='Medal/pop map' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type-v2='filter' values='database' w='11436' x='1634' y='67735' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='33' param='vert' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone h='4920' id='24' mode='checkdropdown' name='Medal/pop map' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type-v2='filter' values='database' w='11436' x='1634' y='67735'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='94508' id='3' is-fixed='true' name='Medal/pop map' w='98910' x='545' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='331' h='3662' id='10' name='Medal/pop map' pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type-v2='color' w='98910' x='545' y='95423'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84439' id='12' is-fixed='true' name='Medals/Sport' w='12389' x='86794' y='5835'>
                  <layout-cache fixed-size-h='364' fixed-size-w='199' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A5B7FDC4-EE77-4C32-B113-428E1A8F9950}' />
    </dashboard>
    <dashboard name='Olympics Presentation' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='text-align' id='story-description_10' value='center' />
          <format attr='border-width' id='story-description_10' value='0' />
          <format attr='border-style' id='story-description_10' value='none' />
          <format attr='border-width' id='story-description_11' value='0' />
          <format attr='border-style' id='story-description_11' value='none' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='1' param='vert' removable='false' type-v2='layout-flow' w='98910' x='545' y='915'>
            <zone h='3776' id='3' type-v2='title' w='98910' x='545' y='915' />
            <zone h='9039' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98910' x='545' y='4691' />
            <zone h='85355' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98910' x='545' y='13730'>
              <flipboard active-id='12' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='tela inicial' id='12' />
                  <story-point captured-sheet='Medalha/País' id='1'>
                    <capturedDeltas>
                      <worksheet name='Medalha/País'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='15379737.50555715' min='-10287816.524368497' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='24932260.472359564' min='-19994762.542286817' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Medalha/País bar' id='2' />
                  <story-point captured-sheet='Medal/pop bar' id='4' />
                  <story-point captured-sheet='Medal/100khab' id='3'>
                    <capturedDeltas>
                      <worksheet name='Medal/pop map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='13177026.067725519' min='-6193053.1144001074' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='64197413.137876563' min='21708206.046253957' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='AGE/YEAR DASH' id='9' />
                  <story-point captured-sheet='AGE/YEAR 70 DASH' id='10' />
                  <story-point captured-sheet='' id='11' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='5263' hidden='true' id='6' story-point-id='1' type-v2='text' w='16065' x='33152' y='17620'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='18'>Medalhas por País</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3432' hidden='true' id='7' story-point-id='4' type-v2='text' w='28182' x='56093' y='42220'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='18'>Medalhas por 100k habitantes</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='40618' hidden='true' id='8' story-point-id='11' type-v2='text' w='38802' x='29204' y='34096'>
          <formatted-text>
            <run fontcolor='#222222' fontname='Exchange' fontsize='18'>&quot;These elderly Olympians are the result of a series of forces that have converged at the Rio Games. Advances in sports science are helping preserve skilled but aging athletes. New ideas about training have lengthened their careers. And the surge in funding for athletes, fueled by </run>
            <run fontcolor='#000000' fontname='Exchange' fontsize='18' underline='true'>skyrocketing broadcast-rights fees for the Olympics</run>
            <run fontcolor='#222222' fontname='Exchange' fontsize='18'>, finally makes it possible for competing in the Olympics to be a full-time job.&quot;</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#222222' fontname='Exchange' fontsize='18'>The Wall Street Journal, </run>
            <run auto-url='true' fontcolor='#222222' fontname='Exchange' fontsize='18' hyperlink='tabdoc:load-url url=&amp;quot;https://www.wsj.com/articles/why-olympians-are-older-than-ever-1471563288&amp;quot;'>https://www.wsj.com/articles/why-olympians-are-older-than-ever-1471563288</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='6407' hidden='true' id='9' story-point-id='11' type-v2='text' w='21647' x='36624' y='16362'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='22'>Possiveis motivos:</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{5B5BA53D-9BF2-4F81-9BCE-6EC844EFC424}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='tela inicial'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='65735' id='3' param='C:/Users/filip/OneDrive/Área de Trabalho/IronHack/projeto viz/olympics/Olympic_rings_with_transparent_rims.svg.png' type-v2='bitmap' w='98910' x='545' y='14814'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='13899' id='5' type-v2='text' w='98910' x='545' y='915'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='26'>ANÁLISE OLIMPÍADAS</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='18536' id='6' type-v2='text' w='98910' x='545' y='80549'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Banco de dados: </run>
              <run fontalignment='1'>Æ&#10;</run>
              <run auto-url='true' fontalignment='1' fontcolor='#202124' fontname='zeitung' fontsize='20' hyperlink='tabdoc:load-url url=&amp;quot;https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results&amp;quot;'>https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='15' param='vert' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone forceUpdate='true' h='13899' id='5' type-v2='text' w='98910' x='545' y='915'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='26'>ANÁLISE OLIMPÍADAS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65735' id='3' is-fixed='true' param='C:/Users/filip/OneDrive/Área de Trabalho/IronHack/projeto viz/olympics/Olympic_rings_with_transparent_rims.svg.png' type-v2='bitmap' w='98910' x='545' y='14814'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18536' id='6' type-v2='text' w='98910' x='545' y='80549'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Banco de dados: </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run auto-url='true' fontalignment='1' fontcolor='#202124' fontname='zeitung' fontsize='20' hyperlink='tabdoc:load-url url=&amp;quot;https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results&amp;quot;'>https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{07ADC6E2-3062-425A-9807-3D928C483779}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Medalha/País'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[Multiple Values]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[attr:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Calculation_96264474291777539:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Height:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sex:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{58996F16-1460-4F42-83DE-CAC6E5081A43}' />
    </window>
    <window class='worksheet' name='Medalha/País bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[Multiple Values]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[attr:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Calculation_96264474291777539:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Height:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sex:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{89FDAEC4-6719-4A71-92E4-CA5BB71103DF}' />
    </window>
    <window class='worksheet' name='Medal/pop map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1666B3E0-AC36-4943-A0A6-AC14E2C58D14}' />
    </window>
    <window class='worksheet' name='Medals/Sport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Medal Parameter]</field>
            <field>[Parameters].[Region Parameter]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0448309-10EB-4219-89DF-6802871AD366}' />
    </window>
    <window class='worksheet' name='Medal/pop bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C14B85B3-30A8-4E67-A4C2-6F6846FDA4DA}' />
    </window>
    <window class='dashboard' name='Medal/100khab'>
      <viewpoints>
        <viewpoint name='Medal/pop map'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Medals/Sport'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{F6D7EEF8-37EE-4B91-8302-D22437033CDE}' />
    </window>
    <window class='dashboard' name='AGE/YEAR 70 DASH'>
      <viewpoints>
        <viewpoint name='Age/Year 1970' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{D0607610-9891-4629-9792-D7A690BE0FE4}' />
    </window>
    <window class='worksheet' name='Age/Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='checkdropdown' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[:Measure Names]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[max:Age:qk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age (bin):ok]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age:ok]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Event:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6BD3918-9340-4D5F-8525-A6F3E7AD8F8F}' />
    </window>
    <window class='dashboard' name='AGE/YEAR DASH'>
      <viewpoints>
        <viewpoint name='Age/Year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{2D3C8689-1371-4D25-8FCE-EA9645845429}' />
    </window>
    <window class='worksheet' name='Age/Year 1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='checkdropdown' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]' type='filter' />
            <card param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age (bin):ok]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age:ok]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Event:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FB00595-8CE5-4BDF-82C6-B3856E7461C4}' />
    </window>
    <window class='dashboard' maximized='true' name='Olympics Presentation'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{944227D1-0279-44D2-AB63-BFA7DC2D689D}' />
    </window>
    <window class='dashboard' name='tela inicial'>
      <viewpoints />
      <active id='6' />
      <simple-id uuid='{2EA09231-DF9F-477D-B930-DC07AC9708AB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AGE/YEAR 70 DASH' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AGE/YEAR DASH' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Age/Year' width='192'>
      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
      CuVZGJyeEDEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age/Year 1970' width='192'>
      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
      JY7ezhO2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Medal/100khab' width='192'>
      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
      CV6sdAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Medal/pop bar' width='192'>
      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
      c6L5/1LARYyuZ486AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Medal/pop map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Medalha/País' width='192'>
      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
      y6f2eHn5/wHlMrcuPMu7VQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Medalha/País bar' width='192'>
      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
      rWwFCRBwpvn/wIx+O/ytVtwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Medals/Sport' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Olympics Presentation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tela inicial' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
