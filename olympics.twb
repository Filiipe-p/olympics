<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1108.0821                               -->
<workbook original-version='18.1' source-build='2022.3.1 (20223.22.1108.0821)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <StorytellingArrowOnlyNavigator />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Medal Parameter' datatype='string' name='[Medal Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bronze&quot;'>
        <calculation class='tableau' formula='&quot;Bronze&quot;' />
        <members>
          <member value='&quot;Bronze&quot;' />
          <member value='&quot;Gold&quot;' />
          <member value='&quot;NA&quot;' />
          <member value='&quot;Silver&quot;' />
        </members>
      </column>
      <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hungary&quot;'>
        <calculation class='tableau' formula='&quot;Hungary&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;American Samoa&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Antigua&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Boliva&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Cook Islands&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czech Republic&quot;' />
          <member value='&quot;Democratic Republic of the Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guam&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Individual Olympic Athletes&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Ivory Coast&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macedonia&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;NA&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nauru&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Korea&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palau&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Republic of Congo&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Kitts&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Vincent&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Swaziland&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;UK&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;USA&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Virgin Islands, British&quot;' />
          <member value='&quot;Virgin Islands, US&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Region Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Medal Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='athlete_events+' inline='true' name='federated.0v5k1j91xx0fnf13ckub004uw450' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_events' name='textscan.0bppxzb0koodzh12mn0ie1m1szu6'>
            <connection class='textscan' directory='C:/Users/filip/OneDrive/Área de Trabalho/IronHack/projeto viz/olympics' filename='athlete_events.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Sex' ordinal='2' />
            <column datatype='integer' name='Age' ordinal='3' />
            <column datatype='string' name='Height' ordinal='4' />
            <column datatype='real' name='Weight' ordinal='5' />
            <column datatype='string' name='Team' ordinal='6' />
            <column datatype='string' name='NOC' ordinal='7' />
            <column datatype='string' name='Games' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='string' name='Season' ordinal='10' />
            <column datatype='string' name='City' ordinal='11' />
            <column datatype='string' name='Sport' ordinal='12' />
            <column datatype='string' name='Event' ordinal='13' />
            <column datatype='string' name='Medal' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='string' name='Sex' ordinal='2' />
              <column datatype='integer' name='Age' ordinal='3' />
              <column datatype='string' name='Height' ordinal='4' />
              <column datatype='real' name='Weight' ordinal='5' />
              <column datatype='string' name='Team' ordinal='6' />
              <column datatype='string' name='NOC' ordinal='7' />
              <column datatype='string' name='Games' ordinal='8' />
              <column datatype='integer' name='Year' ordinal='9' />
              <column datatype='string' name='Season' ordinal='10' />
              <column datatype='string' name='City' ordinal='11' />
              <column datatype='string' name='Sport' ordinal='12' />
              <column datatype='string' name='Event' ordinal='13' />
              <column datatype='string' name='Medal' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='noc_regions.csv' table='[noc_regions#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='string' name='NOC' ordinal='0' />
              <column datatype='string' name='region' ordinal='1' />
              <column datatype='string' name='notes' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='pop.csv' table='[pop#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='pt_BR'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Population' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age]' value='[athlete_events.csv].[Age]' />
          <map key='[City]' value='[athlete_events.csv].[City]' />
          <map key='[Country]' value='[pop.csv].[Country]' />
          <map key='[Event]' value='[athlete_events.csv].[Event]' />
          <map key='[F1]' value='[pop.csv].[F1]' />
          <map key='[Games]' value='[athlete_events.csv].[Games]' />
          <map key='[Height]' value='[athlete_events.csv].[Height]' />
          <map key='[ID]' value='[athlete_events.csv].[ID]' />
          <map key='[Medal]' value='[athlete_events.csv].[Medal]' />
          <map key='[NOC (noc_regions.csv)]' value='[noc_regions.csv].[NOC]' />
          <map key='[NOC]' value='[athlete_events.csv].[NOC]' />
          <map key='[Name]' value='[athlete_events.csv].[Name]' />
          <map key='[Population]' value='[pop.csv].[Population]' />
          <map key='[Season]' value='[athlete_events.csv].[Season]' />
          <map key='[Sex]' value='[athlete_events.csv].[Sex]' />
          <map key='[Sport]' value='[athlete_events.csv].[Sport]' />
          <map key='[Team]' value='[athlete_events.csv].[Team]' />
          <map key='[Unnamed: 0]' value='[pop.csv].[Unnamed: 0]' />
          <map key='[Weight]' value='[athlete_events.csv].[Weight]' />
          <map key='[Year]' value='[athlete_events.csv].[Year]' />
          <map key='[notes]' value='[noc_regions.csv].[notes]' />
          <map key='[region]' value='[noc_regions.csv].[region]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Games</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Games]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Games</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[athlete_events.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC (noc_regions.csv)]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[notes]</local-name>
            <parent-name>[noc_regions.csv]</parent-name>
            <remote-alias>notes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[pop.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop.csv_E17D725E4117453FA1CDFC2740EC445F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='5' />
      </column>
      <column datatype='integer' name='[Age]' role='dimension' type='ordinal' />
      <column caption='Medal/100000hab' datatype='real' name='[Calculation_920141731385315328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(COUNT([Medal])/SUM([Population]))*100000' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='NOC (noc regions.csv)' datatype='string' name='[NOC (noc_regions.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='noc_regions.csv' datatype='table' name='[__tableau_internal_object_id__].[noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='pop.csv' datatype='table' name='[__tableau_internal_object_id__].[pop.csv_E17D725E4117453FA1CDFC2740EC445F]' role='measure' type='quantitative' />
      <column caption='Notes' datatype='string' name='[notes]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column-instance column='[Sport]' derivation='Max' name='[max:Sport:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Individual Olympic Athletes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Kitts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virgin Islands, US&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boliva&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virgin Islands, British&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Short Track Speed Skating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aeronautics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Art Competitions&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Racquets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equestrianism&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobsleigh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ski Jumping&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skeleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freestyle Skiing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rugby Sevens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Curling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordic Combined&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine Skiing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tug-Of-War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Figure Skating&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Speed Skating&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cross Country Skiing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motorboating&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cycling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trampolining&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpinism&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Military Ski Patrol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biathlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeu De Paume&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canoeing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Sport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Short Track Speed Skating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aeronautics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Art Competitions&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Racquets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equestrianism&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobsleigh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ski Jumping&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skeleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freestyle Skiing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rugby Sevens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Curling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordic Combined&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine Skiing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tug-Of-War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Figure Skating&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Speed Skating&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cross Country Skiing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motorboating&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cycling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trampolining&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpinism&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Military Ski Patrol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biathlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeu De Paume&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canoeing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='ID' />
        <field-sort-custom-order field='Name' />
        <field-sort-custom-order field='Sex' />
        <field-sort-custom-order field='Age' />
        <field-sort-custom-order field='Height' />
        <field-sort-custom-order field='Weight' />
        <field-sort-custom-order field='Team' />
        <field-sort-custom-order field='NOC' />
        <field-sort-custom-order field='Games' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Season' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Sport' />
        <field-sort-custom-order field='Event' />
        <field-sort-custom-order field='Medal' />
        <field-sort-custom-order field='Calculation_96264474291777539' />
        <field-sort-custom-order field='Calculation_96264474289586178' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='athlete_events.csv' id='athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D'>
            <properties context=''>
              <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='athlete_events.csv' table='[athlete_events#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='string' name='Sex' ordinal='2' />
                  <column datatype='integer' name='Age' ordinal='3' />
                  <column datatype='string' name='Height' ordinal='4' />
                  <column datatype='real' name='Weight' ordinal='5' />
                  <column datatype='string' name='Team' ordinal='6' />
                  <column datatype='string' name='NOC' ordinal='7' />
                  <column datatype='string' name='Games' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='string' name='Season' ordinal='10' />
                  <column datatype='string' name='City' ordinal='11' />
                  <column datatype='string' name='Sport' ordinal='12' />
                  <column datatype='string' name='Event' ordinal='13' />
                  <column datatype='string' name='Medal' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='noc_regions.csv' id='noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2'>
            <properties context=''>
              <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='noc_regions.csv' table='[noc_regions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='NOC' ordinal='0' />
                  <column datatype='string' name='region' ordinal='1' />
                  <column datatype='string' name='notes' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='pop.csv' id='pop.csv_E17D725E4117453FA1CDFC2740EC445F'>
            <properties context=''>
              <relation connection='textscan.0bppxzb0koodzh12mn0ie1m1szu6' name='pop.csv' table='[pop#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Population' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[NOC]' />
              <expression op='[NOC (noc_regions.csv)]' />
            </expression>
            <first-end-point object-id='athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D' />
            <second-end-point object-id='noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[region]' />
              <expression op='[Country]' />
            </expression>
            <first-end-point object-id='noc_regions.csv_7734BB1F3E7441598CA6F39E83CCCDE2' />
            <second-end-point object-id='pop.csv_E17D725E4117453FA1CDFC2740EC445F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <edit-parameter-action caption='Region Parameter' name='[Action1_A5199573FDAF482798771D77B8456714]'>
      <activation type='on-select' />
      <source dashboard='Medal/100khab' type='sheet' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='assign-fixed-value' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' />
        <param name='target-parameter' value='[Parameters].[Region Parameter]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Age/Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='integer' name='[Age]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]'>
            <groupfilter function='level-members' level='[none:Sport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]' field-type='quantitative' min='15.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{569222DF-DE58-4393-8618-EE289B481AC0}' />
    </worksheet>
    <worksheet name='Medal/pop bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column caption='Medal/100000hab' datatype='real' name='[Calculation_920141731385315328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([Medal])/SUM([Population]))*100000' />
            </column>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_920141731385315328]' derivation='User' name='[usr:Calculation_920141731385315328:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' />
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]</cols>
      </table>
      <simple-id uuid='{7A051B6B-82A0-4BE2-82AB-FFC6613D7BD9}' />
    </worksheet>
    <worksheet name='Medal/pop map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Medalhas por 100.000 habitantes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column caption='Medal/100000hab' datatype='real' name='[Calculation_920141731385315328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([Medal])/SUM([Population]))*100000' />
            </column>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_920141731385315328]' derivation='User' name='[usr:Calculation_920141731385315328:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='28507189.850916158' min='-20850582.504866727' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='14527871.409491329' min='-11928442.43536845' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' />
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' />
              <geometry column='[federated.0v5k1j91xx0fnf13ckub004uw450].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B3EFB12F-75B0-41A8-9522-0B8E89C32C6A}' />
    </worksheet>
    <worksheet name='Medalha/País'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='athlete_events.csv' datatype='integer' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='20357764.219105922' min='-16781991.374641996' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='15788052.299747065' min='-8971785.5006521884' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
              <lod column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' />
              <geometry column='[federated.0v5k1j91xx0fnf13ckub004uw450].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2D34946C-CB72-4838-A7A5-6D9BB48A61E6}' />
    </worksheet>
    <worksheet name='Medalha/País bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='athlete_events.csv' datatype='integer' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='Count' name='[cnt:Medal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v5k1j91xx0fnf13ckub004uw450].[cnt:Medal:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</rows>
        <cols>[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]</cols>
      </table>
      <simple-id uuid='{DE326CA9-A86F-469B-B4EE-9C8098CF790E}' />
    </worksheet>
    <worksheet name='Medals/Sport'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Medalhas por esporte</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hungary&quot;'>
              <calculation class='tableau' formula='&quot;Hungary&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='athlete_events.csv' datatype='integer' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]'>
            <groupfilter expression='[region]=[Parameters].[Region Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</column>
            <column>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B53B35AE-9AE1-4E10-869E-B7CAA905093A}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Hungary&quot;'>
              <calculation class='tableau' formula='&quot;Hungary&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
            <_.fcp.ObjectModelTableType.true...column caption='athlete_events.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='athlete_events.csv' datatype='integer' name='[__tableau_internal_object_id__].[athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' />
              <color column='[Parameters].[Region Parameter]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{443FD6D7-C7EA-4A92-9CF1-3BEED6ED687F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='athlete_events+' name='federated.0v5k1j91xx0fnf13ckub004uw450' />
      </datasources>
      <datasource-dependencies datasource='federated.0v5k1j91xx0fnf13ckub004uw450'>
        <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
        <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='915'>
            <zone h='98170' id='5' type-v2='layout-basic' w='88018' x='545' y='915'>
              <zone h='98170' id='3' name='Age/Year' w='88018' x='545' y='915'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98170' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10892' x='88563' y='915' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6522' id='8' mode='checkdropdown' name='Age/Year' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type-v2='filter' values='relevant' w='16814' x='63785' y='12815' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='11' param='vert' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone h='6522' id='8' mode='checkdropdown' name='Age/Year' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type-v2='filter' values='relevant' w='16814' x='63785' y='12815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98170' id='3' is-fixed='true' name='Age/Year' w='88018' x='545' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8DFFCB10-BA38-46BB-960E-B76607F2AA79}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{40CA931F-ACBD-46BE-A55F-21AD9148BA2F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Medal/100khab'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='15' param='horz' type-v2='layout-flow' w='98910' x='545' y='915'>
            <zone h='98170' id='13' type-v2='layout-basic' w='98910' x='545' y='915'>
              <zone h='94508' id='7' param='horz' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone h='94508' id='5' type-v2='layout-basic' w='98910' x='545' y='915'>
                  <zone h='94508' id='3' name='Medal/pop map' w='98910' x='545' y='915'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='3662' id='11' param='horz' type-v2='layout-flow' w='98910' x='545' y='95423'>
                <zone fixed-size='331' h='3662' id='10' is-fixed='true' name='Medal/pop map' pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type-v2='color' w='98910' x='545' y='95423'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='331' h='84439' id='12' is-fixed='true' name='Medals/Sport' w='12389' x='84820' y='7094'>
          <layout-cache fixed-size-h='364' fixed-size-w='199' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='22' param='vert' type-v2='layout-flow' w='98910' x='545' y='915'>
                <zone fixed-size='280' h='94508' id='3' is-fixed='true' name='Medal/pop map' w='98910' x='545' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='331' h='3662' id='10' name='Medal/pop map' pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type-v2='color' w='98910' x='545' y='95423'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84439' id='12' is-fixed='true' name='Medals/Sport' w='12389' x='84820' y='7094'>
                  <layout-cache fixed-size-h='364' fixed-size-w='199' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A5B7FDC4-EE77-4C32-B113-428E1A8F9950}' />
    </dashboard>
    <dashboard name='Olympics Presentation' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='1' param='vert' removable='false' type-v2='layout-flow' w='98910' x='545' y='915'>
            <zone h='3776' id='3' type-v2='title' w='98910' x='545' y='915' />
            <zone h='9039' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98910' x='545' y='4691' />
            <zone h='85355' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98910' x='545' y='13730'>
              <flipboard active-id='3' nav-type='arrowonly' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Medalha/País' id='1'>
                    <capturedDeltas>
                      <worksheet name='Medalha/País'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='15379737.50555715' min='-10287816.524368497' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='24932260.472359564' min='-19994762.542286817' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Medalha/País bar' id='2' />
                  <story-point captured-sheet='Medal/pop bar' id='4' />
                  <story-point captured-sheet='Medal/100khab' id='3'>
                    <currentDeltas>
                      <worksheet name='Medal/pop map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='15214937.228115203' min='-8183512.8376221694' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='29012081.926083408' min='-22313551.857774243' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column name='[Region Parameter]' value='&quot;Hungary&quot;' />
                      </datasource>
                    </currentDeltas>
                    <capturedDeltas>
                      <worksheet name='Medal/pop map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Latitude (generated)]' field-type='quantitative' max='15214937.228115203' min='-8183512.8376221694' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0v5k1j91xx0fnf13ckub004uw450].[Longitude (generated)]' field-type='quantitative' max='29012081.926083408' min='-22313551.857774243' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column name='[Region Parameter]' value='&quot;Canada&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='5263' hidden='true' id='6' story-point-id='1' type-v2='text' w='16065' x='33152' y='17620'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='18'>Medalhas por País</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3432' hidden='true' id='7' story-point-id='4' type-v2='text' w='28182' x='56093' y='42220'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='18'>Medalhas por 100k habitantes</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{5B5BA53D-9BF2-4F81-9BCE-6EC844EFC424}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Medalha/País'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[Multiple Values]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[attr:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Calculation_96264474291777539:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Height:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sex:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{58996F16-1460-4F42-83DE-CAC6E5081A43}' />
    </window>
    <window class='worksheet' name='Medalha/País bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[__tableau_internal_object_id__].[cnt:athlete_events.csv_9C71F66385B24C02BAFFEE25682BA25D:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[Multiple Values]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[attr:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Calculation_96264474291777539:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Height:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sex:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{89FDAEC4-6719-4A71-92E4-CA5BB71103DF}' />
    </window>
    <window class='worksheet' name='Medal/pop map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1666B3E0-AC36-4943-A0A6-AC14E2C58D14}' />
    </window>
    <window class='worksheet' name='Medals/Sport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Medal Parameter]</field>
            <field>[Parameters].[Region Parameter]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0448309-10EB-4219-89DF-6802871AD366}' />
    </window>
    <window class='worksheet' name='Age/Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='checkdropdown' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]</field>
                  <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>27.125252525252524</value>
                <value>1906</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age (bin):ok]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Age:ok]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Event:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FB00595-8CE5-4BDF-82C6-B3856E7461C4}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Parameters].[Region Parameter]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Region Parameter]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sex:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Sport:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Weight:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9DA77EF-BAA2-476A-BFE4-9803F0825015}' />
    </window>
    <window class='worksheet' name='Medal/pop bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0v5k1j91xx0fnf13ckub004uw450].[usr:Calculation_920141731385315328:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Games:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Medal:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Season:nk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
            <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C14B85B3-30A8-4E67-A4C2-6F6846FDA4DA}' />
    </window>
    <window class='dashboard' name='Medal/100khab'>
      <viewpoints>
        <viewpoint name='Medal/pop map'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Medals/Sport'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{F6D7EEF8-37EE-4B91-8302-D22437033CDE}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{6992B65B-F79C-4E79-8B45-0F9AD6A86A0C}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Age/Year'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[avg:Age:qk]</field>
                    <field>[federated.0v5k1j91xx0fnf13ckub004uw450].[none:Year:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>29.414906530711338</value>
                  <value>1928</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{D0607610-9891-4629-9792-D7A690BE0FE4}' />
    </window>
    <window class='dashboard' maximized='true' name='Olympics Presentation'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{944227D1-0279-44D2-AB63-BFA7DC2D689D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age/Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      CJkkWh/aj1MdnaipMq+dEsmdB+C88K1QCSmnvAGwVNdhb0cHDAbL2jmSqaoWhw93leRN01mR
      9vMkqpA3ADX1TejpaVLsTcOxFC2BIKpQka0Rg9EU3ZeLqIJq9gYlpBIoAETXKABE1ygARNco
      AETXKABE1ygARNcoAETXKABE1ygARNcoAETXKABE1ygARNck31SJZVOwzcxhR0MTwsEguo6f
      QLVyd68kpCwkB8BgMqO+vgHNTY0wGE2oMnCwu7dJZRLv18QYgyAIYIzuCEnUQXIAxHQC4VgC
      HEAylYLI2mE2GrdUEmk0KrndFiHSSQ6AubYRx442bniMilqI1tEgmOgaBYDoGgWA6BoFgOga
      BYDoGgWA6BoFgOgaBYDoGgWA6BoFgOgaBYDoGgWA6BoFgOgaBYDoGgWA6JrkAHAmYH5uFvF4
      DAsOl2L3DyaknCQXxIBz1NXVYm5hER1NNYhkOOpNVBJJtE1yAIR0DPMON9r3NMMViOLoXgOM
      BiqJJNomOQCWumac+rXmDY9RSSTROhoEE12jABBdowAQXaMAEF2jABBdowAQXaMAEF2jABBd
      owAQXaMAEF2jABBdowAQXaMAEF2jABBdowAQXaMAEF2THAAmZjAxOQ3vkgN3hkeQklYFSYiq
      Sa4IM5qq0NxUD86yMHABosjBjFQTTLRN1o2yV0IhtLS0oL65BbVmAwygmmCibdK/ASw1OHr0
      KACgtTX3GNUEE62jQTDRNQoA0TUKANE1CgDRNQoA0TUKANE1CgDRNQoA0TUKANE1CgDRNQoA
      0TUKANE1CgDRNQoA0TUKANE1WSWRM7MLSIQDmJxZAFVEkgeBrJLI+rpq+AJBIJNBMsNQY+JU
      Ekk07f8B4yqHhFJnnoAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Medal/100khab' width='192'>
      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
      CUcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Medal/pop bar' width='192'>
      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
      A0UmZX8vaPgvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Medal/pop map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOS9Z5Bc2XXn+bvPpzflfRVQcAXb3Wjv2IbsppNIUaLMyMyMYna1GzG7GzHa
      2C/6wNj9sLERG7ETE6PZ2Rk5SiJbpCR6NdlNtrdAw9syKO99+syXz9z9kJ1VKFQBqCoU0D3i
      PyIDqMz33jXv3HOPu+eIbDYrdV1np3F56CK5cpaH9j2KEAIA3/d578R75BsXkL5EpAweaH+Y
      D2ffYnfwAD27DjI0OsS5mZME602kL5E+OMMCtV6ixQVIWLiSpmZ/FEVTkBKQEqEInILLLg7Q
      c+AgAOVymWKxCICiKDs+xjtFIBBAVdWV+blb8DyPYrGIlBLLsnAcB8/zANA0DcMwUFX1rvbh
      0wjXddF0Xcc0zR17aLFY5PvvfpeMuYQaVOha3E1bSzsAH5x/l/7iBbSMwAjrOI5PKBRiyZ4n
      66YpD5Y4vu9hroxcZHppguJ8Gd/1qfdbKKnL5K8VCTUEUHcrLPsLCHeVcPLTJWK5WnpeOIim
      amSzWVzXRVEUhBB3nci2A03TdnTubwbP81BVlWKxSDAYxPd9stksuq4TCoXI5XKYpvlLtwhM
      00TbyQdKKXFdh8f2PU0mk2Y5vUxjfdPK74d2HwUpWJhfYGF+FllbIJ1L0+C2sxCcYGRuiO6G
      fTx65HHeGXwdrVAgaIaor2vg3MAkTs7Fiptolgo30nNRoamuGdMwKZfL+L7/qeT610NVVXzf
      v+sLVFEUdF1HSonv+6TTaaDyvoQQ6LpOuVzGsqxPJaO4m9jRBfD+uXdQhMpcaZrZ4iRRL7lm
      QiPhCI8cfYzF5QVm52d5d+7njMwN0hhuYnphjNpoHclk5Z7fqP8XyEckiqIwMT1BZ3sX7154
      ExkvstyfI7EnDAKkJ7HHfWoDdfR0HQJA13V0XcdxnJ0c3o6iOi/3YneqtiGlJJ1OoyjKijhU
      /b1QKCCEwDTNX6pFsCMLoML5XQ50HeLEuQ+Yj0yiWoLaUgOaVmliYKgfRVfY3dZNKptiYmGM
      L+35OjXxGhRFwbvo0Zu9wN+8+ed8/vCvYhg6uUKOhtpGXun9Eeg+QRKkFlMIKbCzDlbMAAVa
      o5184bEvr3B8IQThcBjP88hms0gpMQyDcrm8E8PdEaiqim3bSCkJhUIAd53wqrJ+uVymXC6v
      mS8hBOVy+Z6IZHcD1d1sq7gjGcH3fYbGBjlx+kO+/cY3sQyL5x77LLFCHZF8ku62PSvXJuM1
      vHP+DcrlMt0de3jh8S/Q0tiCZVkYhsGezr10RffSFGwhHoszMjXCy33fx3EcOsPd+IbL3PIs
      +asukc4A6YE85YxLedmjtb5tnbhTFYEikQjRaPRTt717nofrugSDQeDuE38VpVIJx3GwLGtl
      zqrz9Gmbo61gfn5+w+9vJwXc0Q4wPDHE6zM/QWiCkJFAURRm52b5yiO/gaZpayYzmUjSmGxm
      ZHSEvXv2rnmO67r4nqTOauTgfQcRQlAbqeNI6UFsx8Yu27iuR+whE+nqoAhCySDZ4SL7Ww5x
      sOvwur4pikKpVML3fWzbvpNh3hVUd81sNotpmiviyN2Eoihomobv+2usT5qmIaX8VCnBnuch
      hNi0HldfX7/uu6WlJUbGh7n/6AMr30kpGRkfIRaOkkzWbH8HKBQKvD/5BoqhID1JySkytzjH
      1NIEuq4jhMDzPM5dPLuyPb3w6BfY013ZFSovP4Pv+8zNzfF3b/4NH6Zf53vvfodSqUhTUxOJ
      SIIfnvx7ZmMjBOsr3EnRFdySS6jLoOZohKGFfl4//eqGfZRSfiqJHyrEaJomhmHg+/49aVMI
      QSAQqFg/NG3db58W7j8zP83fffBNfvzB95BSbvs5oVCIo4eOrft+amIK07TwPG97O4DnefzT
      yR/g1pYoXnNQAoKumk4K+Tx1sYaV664OXOb83CmOyKMIIVhcXuTElff57EMv8sa7r9M3d5mg
      F+H+gw/QGmtnSZ9iQUzxo3e/R97Ok5rKknMyhEsWekBDD2nkpgs4BQ8rYhDbFcJsUImGYuv6
      KIQgGAxiGAaFQgHXdbcz1LsG0zQxTbOi/3xsk78XEEJgGMan1kK2nFrmp+d+hGy2KSzkV3ar
      7WAjfSadSVMqFpmbm6O5uXnrC0BKyT+88xKZ4ALleZfWWBcBK0CNUc8rQz/iQOgogWCAprom
      Lk6fw7YKpDNp4rE4wUCQgdE+FE+lb/wqalDB78ozW57kxSe/yPfe/C6KLsiaKUpqASOu81TT
      swTCFuVymZnsJI/t6QEVgmaIn17+AQ92PMYDBx68aX+rsnZ1m1cUBcMwcBwHx3HuiMPcCRzH
      QVXVdZz4XuDTJOo4jsPgxDVyuSy2X6IvexHZ5OKXJYcSx3e0r1JK8rk8RshganaSaDSy9QXg
      OA7pySzFso8aUejY10Umn+b9wbcQIZhMDjB1dZSvWb/D8c5HeG38nzh18SSObvPYgaeImQnO
      nztPsEsnM5mluSeJnS2hCIX9DYfo3t3NhZGznJs+iZ4J8sivPLJuJUspyWaz/P7T/4YPT39w
      SyIyDANgRSyrbvOmaeJ5Hrlc7p5y4Cpc1yWfzxONRj9VBHkvUSqV+MU7rzLk9BJsNREqEANt
      KcDxpsfo6T64qedIKbly5Qo1NUkaG5tues1ffusvWDRm0IRGlATnsx8hSqWS3Irpq6q8zczM
      oCiCl8/+kJ66o3xw7W2MGo1oexC36NFR3s/elv28O/4aqfIiAI83Pkdjopnv/PTb+DU2Xtmn
      tidGcC7JrugedEMnFokRi8b59rk/x4hqNCx18uTxp4hGYwwM93Nu6hSOsCnnyzyx91lioTiN
      DY2b7v+N8H2fXC73iYlIpmmumEF/meB5Hv/w1ktkaxYQqgAfxKLOgZojPNjzyJZ2Rikl+Xye
      UCi0To/xfZ++wV4GZnsZt4ex6jW8sodqVpjOlhfAjQ0vLS9xdfQS5+dOoycVsmMFEnvCOFnv
      42vASuo4eY/Ho89TkkWa4s0gBX/z8l9S90iEzHsupmohDpRoUFrZFd/LKedthIDCrI3v+IRk
      FDuSx0oYK04de87lV3p+k+aG5m31v4pCoUCpVLqjZ2wH1d0pEAishGz8MsBxHV5+8yfM142h
      aAIn77JfP8Zjh55kO3Fpruvy1vtv8txTz6/5fnZ+hn86/328WhtFW3UGXo870oSEENQka2iv
      76JONOGPabQHduNc1HAWfIy4huqp2IsukXwS3dBZzM7T1NhMQ0MDzS3NyAWVB489RG1nEiOq
      MedOIaTAsz2EIgg1WUTag4h2h0By1UsphABXoIg7V+aqhHivIYTAsixKpdInpot8Evjxz37E
      bHwERa04NA+qx3ny6Ge2RfxQ0WmOHbxv5W/P8/jJT3/My70/wG+oED+w4RxvWwO7PtamvaWd
      1qZWymWbH334PbQmB6Ws0V08wv3HH8DzKkFvqqrS3VkxgyqKwm89/7uUy2Ucx6FxqZH3rr2J
      TY7GuibcqwpevUN2uEi8J4hqqBSXS2imSjnjEWw0UUr6tidtzSRoGuFwmFwud8fP2gps28Yw
      DILB4C8N9/d9n0wxjWopuCUPOa1y7HP3b8sqVTVzW5ZFTU0NUNFRv/mtbzJdHqPp0eRt53VL
      C2B2bpYr4xeYKUyhqRrP7HuBcKgSk2OZFqZp0V7XyVzO4lDzMbpad63rwPV/a5qGbdukM2na
      Wtt5Rn+BRCJBMBjkX3/xv2d6fhq1S+Hq+GX8nCRiRrHCFrGGGKn8Mp2P76ImUbOVIdwU91oR
      rfpGisUikUjknrZ9Yx/uJeYX5kkH5wlj4YwKfufZP6jQ0DaRzWbXOBGvXbuG6zgoxsbjqo63
      uhtsSQcYGhnk9eWfoJkqUkqclI9MC0LxIF88+DUSscSmOy6lpGSXGJkcxi7ZHO05xrWxfs5P
      niFhJmmJtRMNxWhual65/m6+LCklqVTqnokiVVt8IBD4peL+L7/zY8bUAZy8y/Gax3n8+JM7
      8uzl1DLpdJpkIkkmk+Yn576P3rn2XW6kA2xpB4iGYyijOtRVQniNhAoJcCnxs6s/5KvHfhPL
      Cqy5R0pJoVDg8vAFpCJ5cP8jKIrCyOgw/3T+B2SXcoTiQbpau3jr7Ouo3S5ZFhjO9tKTPU5T
      YxOXrl3gwsxpYiLJ8w++yIWBc2iKRr6Ypy5WTzQcpamh+Y4Iyfd9NE276xGkqqquHFDRNG0l
      FuiXAWevnGGo2Eeo1UQuqTx45OFN3Xcj87te/JZSUiwWyeYylL0y7198l5ySgrgLqOuecyO2
      tACKpSJesIxyw21SSgp+nlMXPuLIgaNEI6ueWdd1OXXuFMOlXpxAiX2ZHmKxGCOLQ5RliaaH
      k+T6yuiGgRcpo4qPD7BkNe576H56h69wMvsWfsCnXe7mr374Z+j7fOwpF1SwdA1/WfJE4XPs
      33VgK8NZg2rM/N1aANUXZpomvu/jOA6BQOA2d/3zQtAIIQywlx3ua310U8aH4bEhLoyd4Vce
      /xpCiAo9nT7F8QeOr8Q1vfTOX+EkiiiaghqrzLPO5kTaLWkew7ODaMEbVpUvKY64+Cno1c7y
      4cX3uTpwhVKpxKWrF0ln0ly2T5ErZQlkY0SjUa4OXWZv8360gomddkiKet798B18xQNZWVCd
      oT2YhsmZyROolkKwEOXqlV6ySgpFE1iNGsq8gVAEEsmHI2/fkfhS3R7vVohA1aVv2zblcplI
      JPKJWZ8+CeRyOd6eeJVAjYE6G+Dho4/c9h7f97k2PIB0BLZt4zgOp8+dZk/3HnzfJ5VJMTQ6
      iGlZ6EEN1dj6u9vSHTPFybVbkScJziSxEgZ6p0RK6Bu/ygfFX/CLE69wavBDTl/5CFO1CHWY
      7K7bi6IoTKUm+MW1lzHbVPSQSrZ2nnwpT1APURzw2Ose48G9D5POpMnKNFJKGkMt0GoT6whX
      dghV0NjcxEH/Qcz5KOUFn9nZ2S1PwPWQUq587gaqp69c1/1UH9a5G7gweA61tvL/o933bcro
      MDE1Tq97jil9hJfe+SYA6XwKx3MoFgvMzs8ghY+lbT+SdtMLYHl5mZQ6t/bLOY2mcCsy+PEB
      a0shfEhH0RRGnWv47UXm/EkCSgihCLJeCoCnjzyHZhvoUQVFUzCTOmZMI6nUE6+P8fDBR4lG
      YoxPjWHEK2G7o0vDKDMW6sc23dJSmQvvX+QXP3+NmcwkSrfNDy58544cWpqm3VWPcDX2aCOP
      5T9n+L6P+PgMq1+Anl2HNnXf5OIEocYAVkInr2XwPI/aulrmFmd57cQveKP3FeZzcxxqug89
      tT1datMLoFAskJD1K9zRc3webn+SSXcYRV9/vC/UbKJoCnmRwbADIGHWnsR1XXRd57ef/X2a
      nE7ckodbdNFcg8xcjlq7ecUN7uBU3OSAiwONDna2wjm1gEriviBGu0QKUHQVJS559d2fbTu8
      uBoTtNPEWeV2UkpKpRK2be+I/+K/FVwdvMz5/IcoqkAKuWkmk7KXVv4fVRMspRc5P/0R88tz
      FGUONSy4Ks/QP3uV4w2PUV7aOvPa9AJoaW7h1x7+LYKpOJ7jw7JKQ00jTWo7y1fypK4WcEvr
      g8rMpM5iYBoAO1hgYmq80rCi8OT+Z8mNFeks9bCnfR/Z+CJj6gDpTOXQtnadsq01SLSshWZU
      vtMCKuHWADU9Mep6YiiqIDuZ58MTH/If/uu/58Tl97csykgpMU2TcDi8o4vA8zw0TVuJSHVd
      91MXnn03EQqEsSd9Cgsl1KDC2Ozobe+ZW5xjyhtdEUm7Yt28O/gG5UgBywhQiKURSR+hCGYD
      Y7wx9lNK41sPalT/5E/+5BubDTxSFAXTtwi4Yb5w31eIhCPEInFm01OQdNHD6+U6IQRaQAEB
      XsnnYM0xwuGK48cwDLqSezi8/whvXXiNUjSLGhV4i4L2xg7ikThDp8YoLpQRcR9R66GaYmWn
      WfkoFWJVDQUUCVGP0YkRWms6iEVimybmao4cqHDtnZLTq+1X7f6lUmnlAPpmcK8cVqlUit6+
      XmZmZ1hcXsT1PCLhO3fSxaMJSqkyQ30jhNstcukc+5sP3tTgUCgW+O7Jv0GpWd3JyzmXGquO
      lLZIqVBCLOkU0iW0eOX9G/lQJeVLZGvv7LYLIJvNoqrqSmeTsRra6jtWtnXHcbgwdYaiXUBz
      dIxSgLK0Edr6E0aKLpgbnSdp1RIMBhkbG6OlpQUhBIMT1ygE0iiqgpPy2NuyH03TuDJ3nlIi
      i2YqCGX9M33XX1kAmqkSbgjgFj3yC0X6rvZR9As01baga7cXOYQQK0mjDMPA87wdOa1VdXpV
      ib5UKqGq6pYOoN9tJ+Abb73B+x9+wI8/eIXpySlO9J7h7OVz2HaZzpb2O/aUt7W0IxDMzy6w
      sLBIZj7H7s7uDcdVKOQZmOxDRlZ3yWwhwyPNT9O/eBkvVsaL2aD7K5Yf33JYmk4RqN2aZe2m
      C8BxnIrbOpXi5PkT7OnaSzqdXpc2wzRNdiX3omQMIlqcmkAdS30ZbKOAHlx/7K5k5RmZHkbk
      NMLBMNFoFICB6V4KVgYhBOlCCj1tUV/XQFO0heGBYdKTebRYxfpTWCihqBWCWr5QQNNV1OAq
      NzGiOtnJAsmjYSYmJpBZQUdbx22JSEqJ4zi4rrtylHInFkD1bOv10Z9bST9yt4h/YWGBgWsD
      jIyO8vrbb3Jhrg/fgDmZYt5Ps2xnOD15iSazhs62jjtqS1EUOpo7Odx+jKOd99Pa2MrJyx/g
      eC7J2NpwFsuyGJsfoWBkVu8v6uyvO0h/5jKKUXn315s9VU0lULN1s/IKhVZfvqZpLC4t8vNz
      L5OezhGvi5Iy58nnP8Nf/O2f869/9w8ZnhyirbGNmmTFrtU7epVe4wyaVQmRUI6AJW7SGSnJ
      lJf52ckf8z//9h/j+z4nTn9IQ7iJaXsE1VRQXQ2ocPu6mnp+7anfZGh4iHOXz5D106DoOCMq
      ejhIQzJCMB9hQR/HiFWGI4Sg/kiCwpxNMVXivPkR++b2b+rcQKFQWMkrtFMHZaqLqLqoDMP4
      xM8ASCn5u+99l+nJabJenkUlhx3w8ISP6gtMXUXYcCTcTUt9M+9++A4PP/DIHSvvhmGsMIJ4
      OMlrl37G0sISTQ3NNNY1rjgjFzLzcF2IkO/6jMwPoYY2Fpuq3mHpb03vU//dH/+7b5imyejY
      KN//+T/QN9DHmfQH2EYRtc7HS9poYYXxwQlmc9PkMzmGgpfon70CWY1YOEZ9sp7+kV4cUQYJ
      irY2tt13fWRKAUvi5D1yF10ePfgku7p2MXCtn7enfs503xzJciOZVBY1DoNXh3BzPs3NzQSs
      AI0NjVzLXMVtLJCazvDY/qeIRxK01rYTskJMj8yixOWK1Ug1VIRW2S3KCx77d+8nEUvedkIU
      RVnJkua67o7sANWMbFDRM0Kh0Cd2JrcaQfnN7/wt5y6eZ1lmmQ/nKQU8XMXHVyQR1UDUaAgN
      Suk8MwwzOjuEWtSJRmLour6p/p8fOINdtolH4hv+HjCCRIhzsvgm17JXuDJymYgSIxaOM3Bl
      kIKWRTUr7Xg5SUd0N9P+GNJdfc83ju1muNkuqj78tWPfKKRLvH/ifeTeAn5tCSOmoQUU1Ovk
      bjuQJ9ISpBTNVsQPE6a9MXpHL6PZBlEvQbvZDXmVvLWaes/LSyK5GurdVrLLOTzdwRceB1oO
      cebsGS7MnCbYqVHG5umDz9E3fpVAm44SlaSu5bi8eI7uhr0YhsFQ3zCFaIZQo0VuocDnn/4S
      Zy6comdvD3axzPzMAkoEFHVVJ3DyLlrW4uD+g8RvE6wnhEDTtJUDKo7jbBhAtV3ouk4kEvlE
      if/c+XP87NVXuDhwmelYDk/4BH0Nz5f4qkTxwTR1MAVmXuHYs11EmoIE6kyGZq7Rn7rE6PQI
      zdE2AtbNQzl83+d7515ieWmZns5K2pq+/r6VZACu63Lmwmn2de+jf6wPEfeRAZe+mSuM9o/z
      4pNfYHp6mqKRr+h4BYXjXY9gz3p40ype2cMPuXcsHqq/88e/8Y1hp4+yVUBoysqKuxFCiJV8
      nCuHUhSBtHxm5Diz/gQz5UmMVJBcIYc3D23GLtr13SzYcyyEJgkuJPjsoS/QXb+PcCRMW0s7
      LfE2rp7rJRyJ0Bprx7ZtiuEsqq7gzPuILpvSgkN7QwevXfoZeo1COesSkhF6Og+BB01NzRia
      gZv1mZqexKzVV/roljyKU2UO7jtMPB7f1IQ5jkOpVKJcLm+b+KvpB4GVoLdPOvKzUCjwp//1
      /2VsdoKCsHF8F3yJbfiE0LF0DdNXIaGAENQGwjTuqjANoQishIEaVLDNAn0TV2gJtBMKVuQU
      3/f54KP3mV+eJxaJo+s6YT/GIwcfZ3RyhLdOvMFQqp/Ohl28fekNTvWdYDo6xMB4P064iPjY
      wakFVOxInqGhIbqi3cyJyQoTDkjUnMVYZphC4xKxXD15LYOi3xkzUX/73/76N0oUbhlLsdFL
      uzGuWtEUzLkoB9oP8czRz7Krbg+F5RLzc/MM9F5DCQjKgSJayWLP7r3UJmuRUnL5yiWWYzMw
      qxOPxRlXriHMitnPMUoomkKL18Wpcx+Rjy+hBzWcvMszu14kEU9QKBYIh8O81fsa87kZAoUI
      rueiVnRrzKiBViv46LUzeLZPc1Pzbc+b5nI5CoVCZVzb5NbV3DuhUAjLstYlCrvXSGfSvPKL
      V6lJJJmdnyUtCzgBiWuAp0kc38OwNERSg+q7tX2S8RC6tX6+pOlzdeIihh2goaYRIQSZXJaP
      3DcYGx2jp+0wNfEa3rv8NmdK75E3U6QWUgwsXqVYk8YN2whF4FvOCvFXIYTADdiMLg5jRFb1
      ujaxi7yfxQ4UyC3lEZaPchOGDWuZ0M2gbTf2ZaN7SlaOyzPnGM4MsJibwzXLyAWTYLtBpL2y
      XQ7KC4yc7ScggiyW5rFkkECNiZP1uJw+C7WrimcgaeJ7EsPSKYgsVrKiPFkJg8GFPtrb2mlv
      ayedTjPHJGrQ4FBbD3bRZlBeXCG4QMIkfszn7SuvkXIX+dVnf+2mhC2lXMkhWlWstkq4hmF8
      4tz+Rmiqxle+/Kv8pz/7z8yJNLmYhxSr79DTgaKE6Oo9BdNlpG+OAw+1bfhMNS74YPF1AkaQ
      7o49uJ6DktVpC3exnFrmB+//A35bAUURKLpKfN/mD74IIQjWr5qJvbxPfVsjw+lrAJR9G3/B
      IxLZWAwTQmxKf9uUB+xmC+RG+Vip9SmJNCXSiCjoKCynl0gP5YntWc2B6Sds8thYaECF2LxQ
      mWLaJVq7dkCKKji98D5uwMUSFQuEUASTmfGVa0KhEPvNo7S2tdHdvpeRsWH658+jBVZt16GG
      AFbS5PQrpynM2zz7mWdpalqfQqM6njtxPn0ac2yGQiGuXL3KudHLuJq/hvir8KRcSxCupK65
      siKK8zZWjbHic6lCCQnGl0bp7thDvpxF9TWO7DnG1aHL+G2FdddvBSu0JaHR68B1XRataVQU
      gp06yJtbpDbL1Le1vwshVpxjt0upF20NoYVU/NuYp6x6nejujVezmqxMdDnrsNibxl8SPLP3
      hTW5LT9z/Dm62/fiOGU+nHgbPaitcPn8XJHcTBFFE7Q9Vc9gtpfvv/aPG05SVRHebpaGasjD
      reB53joTq+d7KyEgdwNzc3P86ff/jMVYEe8m3fM9f+2ceGAGK0RmmCbKUBB3ca3EIF2IBeKU
      SiUO7jpCQcnxrRN/zsnld+6I+AHcvMfEq4vkrpbZV3+QD6feWjnqeH0EwJ1gSwdirif26r/V
      Ig8345yqoVB/JM52GKLvSapJH9SUye7IPj4cO8Hjh5+ntbl13fVSSl47/wrFWAYhV0MlSgsO
      DX4rU7OjhFsChBsCNKutNyXwaqLYTXORj2XNquhzK0gp+fnrrzK+MMbXv/BbLKYqtRJc3+XD
      0Xd5ouszPHr8sU21uxV8eOIE6VwGQxXYoY1FgxvnQxowPZki0hBEjYJvO3y288vMp+eYzI+y
      aM/RGd6Lgso3T/xnzEIIvUVFKD7GJg+k3ApaSKP2/ihBN8yJqbcpJ/I7vrNuaQFU9YXrj6PB
      7b2lRmh7zpPMaJ6YSEK7jSFNLgycp7Ola93Z46q9XtM0IiSY8oYR2qoMWJgr8djnn+DD0yrL
      cppMX4mjXz9603ar4Qpwey9sleNXU5zc7vrRsVHePvsmIin52es/5VL+LFLx0RMqIiH4YPwd
      urv2UFdTt5kp2hSKxSLnRi6RizioJZA3dlHCPtHCkcOHGMyPMFQcB1EZey5TXLlM1LlcGD3L
      rz75NeARyuUy12b6eG/xNbQaBTe5swQqBATqDCRlHMorIdU7CeVWFp6b3qQo+L6P7/t3Na1g
      rCuEH3FY6s3RZLYR2KWiN4EVWD0AIaXk3NUz/O37f85L732Ty+XTcINY1vhQkr7BXj77mc9h
      D0i+9PyX6ers2rDNalJdYM3OthF0XSccDm/JxFlXW8e//LU/JEENl8tn0RsVjHoN8XFIeTa0
      zPm+s5uan81ASsnMzAyTizPgg78By0vKMP/rv/pf+P2v/A6PNR+HKj+TEAmt3dHioQS9fb1c
      7r+Epmlk7cyK9fDTpvdsBhqsVWZvFHFgvUJxq1DeneUAArVWUiuSWCETzRRkxQI/ufyPPLP7
      BZrqmpFScjV1AWocFsczZOeK1B+Oo37sjZZSogc1rqUuMffzOf7H3/23m2rXMIzbeoIVRdmy
      mdQ0TWZnZxBhUJM3iBxSoucseo5s7sDIZuC6Lt/87t8yHUhjFgSlwPrxdDd2Ul9XR6lU4ue9
      b66RC/KFtenlZwvT7G7Yy4+vfpdTgx8SMaPI+nufXmWnoNxoBt3ILLqVwe2U11RKSWHOpjwt
      ebT9M5Tdyotw8i6ZXJqfvv8T5ubnUBSFI4nj7C4c5lcP/RafP/IreKPqikJX/USag8wpE/T3
      92+qGEU1GvRW2E6EpKZpPPrwY7QE2pDXRe5KX9Ku7OY3j/8ezY13lupx5ZlS8pDVAMYAACAA
      SURBVJO3fsbV0ijClSgb8S0J7fWtuK7LS6/9PbP68qppREBaliimVhdBypzj5NB7fKbt89iJ
      HMv1058o8d9p2zfVAW7cEe41Fnsz9NQf5cWnvkCpVGJgrA/Phkatg6P77ufk6PvMLk8TjURR
      FJWacC0d7R10tHcQjoT43lt/T8OjMYoLZewxn0iPgRHTePudtzhy5Mht29+M42q7cyOE4MHD
      D7Mrv5s3+n8OiuSpXc9x/4EHMI2dqdGVzmT41kvf4tJkPyoCzRcUIv6a6pqKL3i86T6eOfw4
      f/fyd3lj9v0bM4mgSrHmHi2osmzN8Nb8JHrs7tc4ruJGx2v1uztluOIHvS/JJXfj+kq3avx2
      121Wj9gInu1RTnt8ee/X11h7zlw6za623YxNj9Da0EYinkRKybXRAbo79qwR3z44+x4nZ94l
      3GSR73eJ+knm3WmeP/Qi9x27/5Z9q44hm82uxAPdCFVViUajd0wA1UC5ncxMVywW+etv/w3v
      DJ8iFy7jC4leFJQDq+9PcwSf2/UEf/Tbf8h3fvBdfjb5Fl5g4/cbLKg8+HT3jpgdt4vN0uBW
      saPVGa5fkVUCv9lOcjPil1KSulrkVx782jpT5/2HHuCjiye5kjpHV+sullJLICVjc6NMLo/R
      kdhF/0gfD9//KA8ffRTdN1gozzLaMYBVUvli/Vc2PYFCVCpNplKpDX+LRCI7wv2qPpXbYbM7
      ciqV4k//83+iNzdCLlzGUyRIKp/r0GY28Adf/RcVM7Hp3JT4hRBYpr5C/DsZHLgZ3DjeW+mm
      24G2mZe4lYaq9vMbLSib9awW522e2PMM3d3dG/5+sPsQh8URLMvi7TNvkAjXMFuapBzOMbh8
      BeIweX6Y5zq+yPEHHkRKyfz8HBeGzjE5OcHjjz2x6bFUlWHbtnd84reKzcyflJJv/8PfcTU9
      TDbu4Fe9vYKPTYirntUDXXsJfuyzaEk2wxTrio8rioJuC/Yebl7z3e2sYzuJjRb+Tra9YztA
      9dQT3Nx8uBku1hbcxUPHH7rpNcHAavqLRw49jqqqzCxNMSmuVSrIA9Lw+WDwbUzDJJlMUl/f
      wPP1LzA6MUIun9t0OkIhKkXlqtag63e3e60bbcbaJKUkX8zjmWCVNAoBp/rDxx9WiHxP46oZ
      OGKE1vwGHzs9y5L9Xc2Ea4J4nlcJb/e8TQWZ7TTuVns7FphenRzXdbfdWc/22V9/cNPEVa2w
      OL+8Nl+REIJSQ5of9L7EwFA/8wsVHae5oQVN3dqaV1V1xdZfDXG4vsToJwXf93nn3XfWKYV2
      ycZVfRzjOguWEIgbCPzqxAC5XA7HcRifmkC5roa44oBV0GiVcRItlQC268W0e1XV8l5A89zK
      YHxPoihi3Ta4FVRru16P67nmjd+tI6KcSntP56bbK5VKWJbFwc7DnC6/syY2XAgBuiQYDFEs
      VkKbx6fGuNJ/hS999stbGdaKt9cwDHK53D2p6Xs72La9Tj8RQtDW0MrA1RGWEx/nOPqYVqW4
      TgQS8OrI+5T/scyuWCv1iVqOeXuZKM5x356jHG7poam+kYGRfj64+jY1ByOfiNh3L/QNrThb
      omSWSQ/n0AIqNfvWlxzdLKo2d9/3V8JRqzLjRnkwbxycJ9YHid0K+Xwe0zSZWp5ARNevXDOq
      s5Ra5PjRii5wcfQck94YqVSKeHzjY3q3QrWi+ieF6rwWCpXKmy++8OI6JlJTU4NUQFIReQJl
      Hen4lE1/ncPTKzh89Q++ipSSxx57jNHxUc6MnOTC7CmmUw30pi4S6w58Yhz/Xiw65UjzAyxe
      yFBediktlCmltl9YuuoZvZ5jqqq66YPUigGnr3606ajImpoa5ufnGfMGN9y57IzDW+deZ2J6
      goHBfiZLo2g18PbpN7c9ubeLfr2b8DyPTCbDO++/Qy6b23Be9+/fj2NWxhbE5L979l/QU7Mb
      qa/2W3cV7ovs5Te/+LWV+15941W+/953mQ6NsBSeYXDqGlaDfssTV5+0GLgTUP+f//vff6Oj
      sZOPPjiFnXUoLttEW0Mr52q3gipxXD8xWyEYxRAsabM4Cz4dTZ2buseyLPILRZaYW9dnzVIJ
      NOucv3COKUYw6lQUVaH/oyEO7jr0iWdm2Cw8z+PK1StcvHSBly/8ENUSPPnA0xsqxolEAjdv
      s5xa5o8++3s8+eDjpJaWOT9zFf9jESjg6nzjX/5v6Lq+4ng7cf4Djuw+xrXBa6hBQT5VIJi0
      /tkvAAVgV8du9uzeC4CfEWQm8ne10dtN3GR+lGwui23fOtFtPp+nXC7z6JEn0JbWF+aoIrLH
      Qo1VFqKiChofifPjV3+0/QHcY3ieR2/vVU5+9BHEPBbzC3zrjb9aSbNyPYQQ/NYXf4P/+D/9
      XzzQcx8v/fjv2d3ehS5XlX9d03Adh++8/I+oqsr80jyhOpOu1i6aOxqwHAvf9VYC9G6GT0Iv
      2GkoUJm0Z558lngihu/6pIdzuKX1Cu29Qspf5Ftn/yvfPvkXvHbmVUo3WQjFUpHJyUkUoZDQ
      V5Mr3ezFVHUUPagxk50kn7+7C32noOs6B3s+DpCToHX4BIzALesL2LbN//5//h+c6jtLa0sr
      T+95eEUHVtwKM/jKs19CCEHv1EXcpgJvDv+MQI1OXWeSxq5a3OK9LyB+r7Gyv3V2dPLYA0/g
      lj3sRZelvgz5heKt7t02bsc5zBodM6lD0mPU6OXl0z8kn8+vu29pcYnv/v13KxkcfHtLHMmV
      LouLi9vq/72GEIKuri4ioQj56RLpgTwt1q0ztaVSKQb1GRbKKfqv9eNlbASCI/E9fOm+52hs
      bKS1teJpn5qaZmpglvnMApP9c+SXimimRmo4R3F5a/O6Ud83e91GovP14S13gyGvSY3Y0tzK
      1OwUS6lFnKKLEdEJJHYmOGu7qLjqc5wdOoWfleQzBXzPJxgMEolEOHzoMJPz4/S7FzddIUQI
      QbQjyPkTF+hu3vupO8B+IwqFAiOjw8zOzaIYguA+nWl7nGa9nVhkY6ud63m8efE9YqUA/VND
      yLJHa7yJP/qVf8XD9z+05tqTF05g7BKYMQMrYbA0lkZRFBr21eBmPfKLJczY5gwZ1xPujcR7
      KyK+kfillGQni9ipioOi6uS88Vk7Gg2qaRovPv8ixtsGjl0mpczc0cN3CkIIzBqNy/IUlKAw
      avMHD/8Ruq7z05M/wm7IoofXO7huF0God8A33/r/6Ah184WnvvypLFgnpeQXb7/KhfkzxGvj
      NIkWFkfnoN3mwsg5WhpbN1SGI+EwTX6UcDSIoVns37uPI4ePoGkamWyG84NnCGsRhoaGyehL
      FM4XqD+URMqKjhBrqZh7o01hCv13RxLYCOWMQznloQudprpGQrEAE4PTyJhc8z59x0c1VhfF
      dnepdVQjFFAtwa72/bw3NUVpuYyV+HTUshKi4qjTLQ1JJZe/FTZxrZvL8jfavq//O5A0CSRN
      JodHGR0fZf/e/Z+qncDzPP7yO3+G0QyxSISIH+P+nuNkixneWX6VIfMq5660cP+hB9bcJ2Wl
      Muf+fXuY0Iaw0mEuFc4w8PM+9uzqZsmYRon5ODmPYrSE5elY4RhLfRk0UyPZGl3zvHAyRG66
      SLhpraHhRgZzIyFudi6zE0UUV8FUTaKxBIn9URR1dVGHQiFmz84jgz6BWhO5KHDNMrHO8Jr2
      t4N1CyAaiTE5O8kzjzzL2++pTE8u0vXc+vQhN8NWgpaq8UPX587cDKQiOX/lHPu69hMzk+RY
      2vi6TRz2AQi3mbw2/hMyuTQPP3D74m33CkIIDM0kVC9IdESIphpAgd7Jy8ggCFXQN32Fnj0H
      sUwLKSUnPjrBmYmTLGUX0OtVhAmF9mVUIcgHlpkQ1wjHK4SsR1SM6GquHs/2qNm9Pn2kqquU
      Uy6ycSVn1o4xCiEE+Zkiew7vIlq7cd6guvYktW0J5keXMAI6sfsjLM+kSadSmHF9HZPbyoJY
      t3cGg0GeffQ5pmdm+KN/8z/gLwmGX59eF0672cHdSl6reou3Opl6SGVsfhiEpC7UgO/emadS
      0RSsWoNsNntHz7kbiMWilLJlnJKLKlVURWXenMaIaCiqYN6Y4qW3/hqohIb85PUfM54fRSQk
      elxFC6zGLSmawHNXy0DdyKxuRjflvIMeU8nPFlfuvR43k/dvByEE0pfEkzECkVvrmkII6jtr
      iDdUzmAkm+KIrLqSDXq7+sCGWuOxQ/fR1NRELBbjK1/+Kooi8L2dt/lef2RxK51XNAW7Pks6
      n6Z/uG+VLW0TXtnHS8tthUfcTRQKBfqG+gj4YfYq93H//od45+ybCAHl7MfnG3VJg1k5G/3y
      qy/jd9rIIpgbiK1aQKVUKN90rp2iR3owT3a0wOJgmtR4hvxiEZmDunAdDZF6CgtbK0Lo2h7L
      A1my46sltK5vPztRIBILr5S+2goaWusozq9aqbaa5TA/VUSUSiV5q0olCwsL/Me/+A8EO3Ui
      zcHb6gObJeQbt6ztKDLussT1Hcykvq3VD+AuSR6ufZqzw6dosJp48dkvbOs5dwNSSrK5LMHA
      aiTq1WtX+empH6HU+0hbogqNNr+bvMwxsNSLsMAvesS6K+LE9XK6s+Qhl6DlcN2GqWqWh7O0
      d7ehqALHdnHLHk7JwQwZWCETz/UYPDeK2altmC/0xr7bGQclrdPUWQ8ClmZSLC4vEoib+Hnw
      hY8WUSjM2hw4tmdbi2Dk8jjZ5TxGrQKuINhSKc54I4qLlapFZlhHqJWdx5nyb38eQNVUIg1B
      ivkCI29M0/lsE1b85otgs9z8RrltO9ASAo3bK+hSSkRKJ6nVspxKEQ6F8RQXS7U4vudRPM9n
      2V7gyQPPbKsfdwtCCKKRVYV0fn6ei73nub/rQbqadxMwA1gBi/cvvsO0NoSSEqghhVJurQNL
      Sok/Ljh0sIfAIYvx/inmBlPEuoKYkcr8+b4EXyA+zgdkWDqGpUN0NfJV1VS6DrUxfm2aMjaE
      JIGksUZhrba3fCWHgsKBhzpX3m9jRx2ReBjNULFCJo7tkl3M0dwT2BbxA3QcqPgy7EIZ3dLo
      vzBIpLtSlVQognLWxUv5JBsSlAsOy0NptJiCHtLwpbz9DgAwvzDPSz//axzK2LMeyYcDaIGN
      O1wZ6zYIWkryC0XCDcE1Z0+FEGsyxG39sZLyrM/TbS+gqirZbIYLw2d59MgT7N99AIAfvv09
      xp1BvDGVeCTOV1/4GtGb2Nc/STiOs3IW4dLlSwzO9uNqZRYiUyiagu/6ZKby5KaKBFoNjPjq
      wX6xqHKo50DlMI8i8Fyf3jMDiKBEUQWF5RJ7j+3GCGzO3i+lpJgpMb+4iF6/9uUUFkvUhxow
      AwZm6N5aEMvFMuMDUxQKRfSgSjAQpGHXapSA5/o4toOdLROuCW5uAQBksxl+8vaPGBy+hqIp
      RHfdJCsvbCCTb060kT7YpTKKLog0B1FUhdS1PLtD+8lrGUr16a3vFlMGUS3Ogj6NGhK0Ffbw
      zIPPU7JLRCNRhoeH+eHl7xDrCiF9SXo0z6MNn+GRBx/dWjv3CP1D/VyaOktQCzNYvooeX3+e
      WPqSpcE0Wq26WkTO9fHHFMxQpZC5pVkkd8Ww82XGB+ewpE73/e0oqoLn+CxPpYk3RdGMWx/+
      GR+eQr0hiV1mPE9XRwdm8JNxoi5PpSlnXWy/RP2exC37v+l9JxKJ0tNxiGV9ltnLSyTa6295
      /XbEmqpI5NoemakcoVySQ4l97N97ACEEr599Fa8rv+nsBKWlMk6phOyycebKFEcU9j5xAMMw
      VlKgD80MYOkBihMuhWyB4rLNqclTPHj/QzuaqWGnIKQgZ2eZVsZQoxsfTZRAKV1GZiVWrQES
      ClM2Hceb0AMaxZRN/5kJ3GtjjMwu4Og+TUYYx7TRhEbZLxPTY7jDHrHGMMH4xsxuZnge27UJ
      spbQIy1BRvsmaN/TihW+94ugnHdpO9BMIVNkYXgRq1YnEN24H1sSvDrbunh72KfuwKq15GbK
      653I94qmYBbCHOu+n6n8OL3DVzh++CGag+0MLF/YdDXA3FQRRRcsDdjU7I1RVMosLi3S0d5B
      yS4xOHKN5x79HM/xOXzf50c/+yGRmggjy0OfKofY9dizew9tLW288u5PmTSvgWBd9o3MVB5R
      XylLmx8sEU4EqGmPIVSBnXMYPT/L1eoxUgNMV2Xvgw1oYQXwMdDIpjN0JjtIzWYRqqBccIjW
      VwqIF1IljFKApWs5Qkc2qA2tCMJ7LMYGJunY3Up5RmJ7JWK7QujmjiYiWYFTcpjuX8CwNCLx
      igEgGA3QHm1lpHdsZxZANBrFSfvUP7CqmG3GcrNV76BQILBf4aLzIWqNgmf7/O0bF9GETma+
      iHZMxYhot21bCyvUdSWYG6g4ysykzmsfvsJ7J9+ls62Dy4OX6GrfRTQaRVEUfvXzXwHA8zaO
      tf+0wLIsXnjy8/zlK/8FtdNbY0WTUlJecHGEiygrRBqCJHdH8WyfmdMLxFsimAGVpG5SyDsE
      TZWWrsS6UBIloDBycYJ4fYx92n30Ll5hemGB4lKZ3/7i76GpGiPL/wU9tDEJ+Z6PsBX2GEc5
      8PwBcrkcP+//0RqRaqvm741CW6pYmkrTdbBtXYFGAOUWCuSW06PXtiUQYgte2xs6e6tBrwmI
      UkH5WAQpTJd5avfznBn+iMBui33yMBOpYYqJ9BoPslN0KS6VkLJi27cClYIOwbhFccSlRq9n
      WiwS3mswMjPEVz/362uOOFbb1zZRVPuThmVaFauWO10x6123AyR2R5FlSajeWrFHNJU68Zlh
      +to4de211Nc2MD++QKEuj5Jf74tRNEFBL9EWOUbP/oMkYkneG3kd3Srw5ruvkyFFoPPm8xSc
      S/D1L3wVRShcHrjI8Ow1rp0fo+VwPYqpYOcq2Z5VU6GmbXO122A9PdmFMsuTGeycvSHxQ+Wk
      4sJwClVXiDdH1ojQW1oAjuNgy+I6mW+ncaNYpTsmBfKIdht8QdAMESsmKJJG+hK36FFcKKOZ
      CvH6SCULglIRpZauZWgNdtHV2s1Hi+/S2dHJ0eYH2Pv4vi1Vav8kcTNx0gs6G5YLVU2FwnKJ
      ZKqWopFDCUHQCvK7v/F7/O33/poaM8nTR55lonGCvx/+Nk7AZfrsIk1Ha1A0BSfvUs65NDc3
      8/j9TwHQ1NTE7uX9xFritDW1s5xe4t3BN1iyZhDqWi+sW/LoaTpCJBxhdGyUU/0nqO+J0yLq
      SbREme1fpL2nBahYbeaHF6nrSt52EWzE+V3bJRwN0b6v5ab3tXQ34fsSx3aYGZrFTGiEayqB
      j1taAAuLC2jhe6sYCiFob+6k5OcxQjr2ssOp6fdRwyoy4FG8KKmNNKI5WYyutYd4tLkQv378
      KzQ2NFIqlVg4M8/jjz15y/Kenza4rsMH594n7S+iCJWIHkURKoZislCYw0yoK6bicC5Owc2j
      KJKnOp7ngUMPcubKKc57HzAke4mPJ/ndr/4+33nl21y4ch7LspBZEGGBp3osDKRABTWooGgK
      TbQRDq/G59zXsxp0V1/bwFeSX+ef3vsh1zK9KKYg3BBAKALNUrk0eY6jPcfo7Oikc76LokhR
      01bRHa9/R0bAoLa5hvmhRRRVwbFdku0xzMB6Pc8ulPFcHyts4rseqq5iRSyWx259hlwIgaoK
      1KBJx/42xvom4GPL6JYWQC6fRbPuXDauJle6WWev/7eKgFZ5EVbSYGZ2kaRSg9OnYStZnO4U
      hlh7j+9JdkX20dhQqWAYCAR4/vHP3XHf7zXscpm+pUtEOyvEla8G/kkIREzy4wVc20VK+Pqz
      /5JIJEK+kCcWjfHumbcRtoJlR7GTWS6nztLTeYhff/43OXPmDFfnLtJAAyEjwGB5GKNr1W+g
      pnSefmStY7CaFr/qi1AUhRcf+RJvnQmyYI2zNJnG8z20hIIaKlMqlQgEAjx44FFeO/0KdjBP
      IFoh7GK2RHq4QKQ9QCgeoGVPJeBS+pKJgWkaumtWJIHp/nlURaWUK1HbkiS1lEFRFDzXI5fJ
      U9tcw2YhhKCuuZa5gQUURaw9EHM7WKbF+bEza4rPbQfVGllSSlzXXZd17EbizxfzZLxlsHy8
      sk9pQNIUa8FJ5ol0mSvFvKFC+G7JIz9lszC8zNFDRz/VCu3toKkaFy5cwC6VyKdLmFG9ouwi
      MUI60bow4USQGqOBQx1HMQxjJW/RuStnuf/QA9y36zgzU7OkjUWujF3Azwk+8/gz7G7cQ9xM
      UtDTlfKpU/NIT1KecWlJtmDKAJFQhFKpyIkrH3Bh8gyDU/1kUlnioQS6XunLwtwi4wujJJtj
      aIrG0kAaz3RITafZ07kPwzAQjsLBpqPMjS0wvzxHrWzm8aNPMTuygGOWULVV5Ti/XMSXPoqq
      MHF5Br/k09RVT2NnHYGwRSQRIhixsAtlNE2jpiWxpcS9uqkTr4sRq41u3hEGFVf8T0a+s1K7
      dbvYKHT1xhNBt4Lv+hvKvgBz59I0Km088eiTJJNJgsHgp9akuRlIKfnxyX9kubSAlhQrNXWr
      i9rJeezhMPcfOY6hr4oN+Xyeb7/1Vzyx9xkOdPfgui6nLp7kfPYk0vCoyTbz+ce+TD6X57tv
      fYuimkPXDFrUTqbmJonEQgSJktfT1LYmCNdeV+XT8yktlxGOihQ+WkxBM1T6Tg+iGQqBsEWs
      PoKQgk7Rw5Geo5VYJMchl8uxsLhAJBzBNE1s22ZpaYn+9CVi7aEKI3R95scWmRtdJBwP4pQc
      fM9n97EOyrZDdiGHBOo7ajA2EJW2gi1RciKRwOwPIinf/uKboBoCDeujQSuy2sa7y/VWio2I
      v7hkU0zZ9HQf4oXjX9x2/3YSuVyOcDi8ZXPfjc+w1QLFTImalkp4xorJ05fs0vfy8OFHudx/
      CRzBwYOV1JLBYBBPd3DcSn5QTdN45L7HaJxs4p/O/IBjPQ8wMz/D0NAQartHvBhnNwdpa2ml
      mC0S3WWh6Sq1keY1VS2lrNSI02OVKqGqumoJiiWjpJbS2LNZrLCJEIJQclWHKJfLSClJJpIr
      71vXderr68nZHcynJgjGKu0GowEUIViaXMbzfHYda2d+YolIMkSyJfH/t/dez5FkWZ7e59oj
      PHQgoLVIXSkqs7To6p6enhVjQ2G0tSXXjA80/l184MMaH5Yczs6QnOlpXV2qq7q6KrVOJDQQ
      CC1d88HTAwioRGokEp9ZWgKBCHcP93uuOPec3+kc/1l5ormBLMv0RYZ2jRvfL1vn+ZtjuTcb
      xU4u1B033Vyf1atFxIbCu9PPv8Li0xKNRvB9n9u3b7O+vv5Ux1haXsTHQ9Y3KqaH/wuCgCKq
      LC8vMz48walTp7ru44n4WSaGJjq/+75PNtFDTEigRXSmx6e5eO4izQWLWr3KjdvXSSZTGFoc
      13SJJPROpxT+H448O01VZVmid7AHq+EguhKF2zVGh0c764XNtdfCzbvAiCRmxo8xpZyittDC
      83xc22X4WD/v/u15Tn90DFVT8FwPz/OJxJ9fHeYnnst8cOIT/rf/8wbxt5ROovKTsnlOvnV+
      vlOjfxw+Pk7Np29gmHRqe0bTq0IUg/szPj6OpmksLy+TyWSeyP06PTXD9T/9gOtWt/2tMW/x
      1ofndvRqiaLIZ+//rPP7F3/+nLnmfVrFNmcn32Z0cBQIJFeMZopyax27VeP2ndv05nLcL94m
      vWnECdlthHYdl0gigt22uPiLQMJFdlSazWZHvsV1Xa7fu0LeXEbwJHLaABOjk6iKiiAIZNM9
      vBP/iC++/RxlTMZqWizdWaVRbTF+egg9prH6YJ10f/L5ZaQ9yRog5Icb33PF+QbxMcJJu550
      j4t/2vzOlT8X+R8+/k+Mje0tF/IqCdSzbTRt/+K6nufxzQ9fIfgCs9zEF32ElowuRPjrc/+e
      aCTK0vISlXqZaruMLCo07Bq+61OpVjH9NufHLjI6PMa1+1d4uPaA//6z/9B1jpWVFf7zL/93
      /s07f8uDBw+YGJ/gy2++IDqk0DOdorFkoudkZE2mXbBp1ppYXjANFoBasYGiyiiajOt6jL8V
      hCj7vk+zaDIoj6NIKvfm7xCdlJDVDSOq3m8znpphoD/wAn199Qv8lPlI/cMn3Z/AtT0Wbi3j
      Oi6eByMnB8gMPFvyUpiJ+FQG0Gq3+KfL/wU72XyqBruTATyrytjsF8t8PP0zfvKTnzzTcQ4y
      v/nqVwxkBpmenEEURZZWF7mzegMr2kDR5K4qLrblUFwuE0sbnE9/wNDAUFfy0VZqtRr5fJ5U
      KoWmaVy7fo2RkRFKlSJT49MsrM4zt/CQMzNn+fWffknmeLQTw79yP0//ZBASWlwu4zouudFN
      QmWeH5QfELY/e9/zKd6tcXHiA649uIw84KLF1K735ReK6IZGNBnI1yzfW0NWJZK5RPC9nzAd
      MsxBd1336QpkRPQI7w5+yr/O/QORzJOvwrc+hGdt/FbDoU8fYmZm5pmOc5DxPI+6WOZuq8St
      76/g1D20rISRjaASLES77qnnI0oisiaTL651yk3t1lDi8Tj59Txf//kr+nv6OX/uPKqqdnrm
      SqlKuRaoakciESRF6hhU2Jv6vk80EaGc756uCaJAuHAMFcM3/gh1u8b3K1+Smowjyd2dse8H
      KteKptCqtakV6oiiiN20WZtdZ/BY3xNPhzZCXuSnrxAzMjjC+bUPWc7PU0msIWj7b8Rb3Z9P
      kw4Z4tcEpoW3+PA/fnwgw5efB81mk+9vfYveoyA9Equtl5p43vYc25C1uQIDM720Vm2y/T37
      Os/kxCSTE5M7/u38W+c5/9Z56o06K+uLTI6NYLsOhcUSueFM5zqsto2RjGxzb4eLXtd1u9ZA
      dttG01UywzsnIK3NFfBcHzWiUCvWiacNdENDUiSW7q7iuU9XYDD8zFPvEImiyLm3zvHR6Z8w
      5h6nOt+kdL+GYz5eT3InqZIntWLf97HzPu/3/ZRPLv1kXzfB87w9i3y/gVNZmQAAIABJREFU
      SpaXl2m3tyecN5oN/nDrV5jZaqfxA2hRlWatvet9S2Rj1AoNIn0K3977klarRbvd3iY/4/s+
      pmlimntLIIbS91euXcayLUqrVWYvz5MZTHX54hPZGNV8nUa52Tl++PlQMn8z4TRqp2mM63i0
      6m16x4PpVKInTmGxhCAGrnRJlqiu13e95v3wTDtaiqKQyWS4oF6ieGsV3/cpzJZoa23QfURF
      wDFdhLYICsSG9OdWatMqufybmf+Owf7dg6C28qSqAS+T/v7+HRvznYe3kNPdo+bK/Tye4xFL
      765kl8jGWLyzguAIHOs9RbMZrNdUVe2qcOk4DvV6HUEQME2T9UKeptmkr6ePTDqLZVnMLjyg
      N9uHYRjcvXeX3HAWs2URTUVZXyihR1Wyg+nOjvzw8QEWb6905uxdezhbQ5UlkXq5ged6ndxi
      3/ep5GvUig3SfcmOcai6EuQWCgKiKODYLj0jmWe6788lO8EwDHrkAcrmOv/tx/+Bzx/+EiUi
      41gOxMBIRnEcl7kHC0SH91Zw2HyzrIYNlohZsxBlAT2nIkpCkHBhp56o8UMw7B3UadJu96Tc
      LiEYG42oXm6C7zN8vH/be7eOpPFMjNaCy+AHQ51zOI5DpVJBlmUikUhXWSvHcbizfBNlyGN2
      +SbSrIonOugZhdmlmzhtl4K1yvHsJPVKk2RPHC2qYjZNlu+v0Tua7fTooiRSXqmS6IkhKdKe
      o3w8E8NqW+hG4B0rLJaQFJmhY/2waeHcqrdJZGNIUpAJlxtOs3JvjWgyihZRiSafPMjxmQ0g
      XAAdHz7F5zd/zezifaJ2EjFroxsbcz1FlenN9bCysorfDm6QMax2jQj1xTZpvxfNUCjVSpTy
      DT4+9lNOfHAS3/f5y40/EzWiXG98T3F1DdM0X5uQ5ichrH3mOA623wbPJ/9wHcdyMJJRBqf7
      ALaVk3Jdt2PgkiQRTej09vVua3ie52FZVicttOtvvosgihidNMjgeOV8ld6JDLIiU6808T0/
      UI0AtKjGwGQvy/fXiGdj4PkUl8uc6HuLVCRFXp1Dje6eO1BZrwXiZkIQ3u77MHQ86Nk7mj+e
      T36uwOjJoGSrIAioEZXcSAZ1JUVCSjA/fx+jT9tVYcL3fZrVFu2GSao3kF98ZgOwLAtVVclm
      slwc/YA/3vo1veIwZrmFtkmVAAJLl1UZSZaQFYm7d++TGIniOT6N2xZ/felvmRoN6gO3220s
      20JVNoK7Pnsv2Nipfltm6cQ9rt68wsVzl571K7xyKpUKxVIR13VJpVIsLS0xMT7B9/e/Qci6
      LN5cYXCmD1nZIQF+k3dl84JTkiRkRaZpPtkcWfRkYHvCUzxjkL9XRo+oJLKxrs4NAk/PwFQv
      9WIDq20TS0VJZVJcOP02v/rzKkS9XUeBkRMDFBbLDM70dQU2hriux+r9PINT3R6fMAzcok1f
      7hg5r5erDy7TiNUw0oEBWy0b13GJJiKs3M+jRVUc2+He9w8ZOTb47GVSdV3vuLWKpQJGNoKU
      8bk08DHV5cY2QYhITEfVFURJJJfKYdYs1q+X+Y8/+587jT88biKe2LEio+JriIrEurXSWcQd
      1Ln9fhAEgUw6QywWI6JHGBwY5Pd//B1+S0BaNhBtGWkHsSdJkrrqsSmKsq0mmy8++X1xXbfj
      Jw9/NjIRBFfks7N/g7eLWLQgCMSzMbJDacbODLPizFEql3hn5kPEvI7dDkrollequPbG6BWJ
      60TiGvVSY5t7fO1hgfzsOtnB1I75xJG4jjLu8e3cH7mzcJNMLMvJ2AWSpX6u/eYOPa0Rht1p
      HnyzSO9YhsxgkkQ6RkbPIa5Fnywcei8EQaC/bwDdjrGw/pBW3eTM6HnmCg9QdtEQisR08rNF
      nLrPxxc+3ff8PJfq5eqtyzjY9Ch9/P4PvycajZJMHjwtn/2gaRq6rhOLxZBlGdd1yfX0Ymhx
      UrE0PbE+ymsVHMXacRTYDcd2MawkPenc49/8iKX8AsSdjn8/rPIpSRK+6HF6+BySrQQJOtLe
      /adiSNy6fpueeB9nj53HzLu01xxS9FJtVjpRxZ7nUV6roRv6tkSY9YUSw8f7UfYQzhIEgUhS
      Q0x61CmzXFik1W7h2C5LxXna0RrJoRh6LBDjytSHeOvYOey28/wKZYeMj44zmphk3V4ibsSJ
      W1najd0rT86cmWR8fOyJYvYNw+CTiZ8zoI2SyWTo6+8nn8/vOKd93bAsC8dxaDabJBIJEokE
      /f39XDrxPtFClvJSbd+jnSSL1KzqE4+O4aiiKErHfQlgZCJcffAjxydP4pUeb4iCIKBkBH71
      1T/jeR6nT5yhv7+fheJD3p34mES5F2U9RmvOJSGlidkpxHUdf1GlulZDEAQGpntZurv22HOF
      6DGN9Fic+JSKkYhwYeYdIqKBUwvuQXPVYmRoFM/zWGzNPh8v0FbGRydYvrzIF3/+A7/49N/y
      zeWvqCl5BGkjnBY2vBZZI/fE3pnJsSkmx6ZwXIeFxQXef+c9rly9wokTJzCir0f1x614nte1
      F7B1LjwyMMq4NMG1hR+Qet3HSowIgoCbavLFtd9xafqDfRf43ku0oKqss15YZ7r3BHcqVx5b
      OcbIRigul/nNl/+K4zm09CpD2XGymR56c33bNkXDn3/zx19x59tbJLIG/pa9i9BztZt7NfxZ
      1RXGRyboafTw7Z2vKC/XSIm9iKJItVqlVq4/vynQZnRdZ3JkmnxhjYHeQcaGxllfKtKSap18
      gM1fNmIlGOkf3dex7z28y2+//jWX7/3A1TtXkF2Fdy5eIp1OMz8/j23ZGIax79rEB4lWq4Vt
      2zSbwSbSVg+XaZokEgkGM8M01tqUW8U9vSsAjuVQrpRZqs5TKpYo5ouoioZlWSjKdpf0Un4B
      KbV9xAjfJ8oCdtnn9MwZ2mWHmlDcc/QWBIFEb4zVwgqW2KJRbnHpxHudTEBVVbs2wcKfx0cm
      0KUI+coqPaNpJHmjgwx3lTfv62y9BkEQMG2TnDaI7TgszC2gSwZnZy4giiKqqjLUM/JiRoDw
      gj5655PO75N9M/xpcZlIdvsDs/z2jh4Cx3FYW1+jVq8yNDCM7/lcvX4VwRJRBA0h4/P/Xf6v
      aD9G+B9/8Z84f/481WqVSqVCJPL6JL5D0LjL5XKgudlq7SjV3mmEosix8RPkyn3cnL+MNiB2
      NRAIGsn6fBFJlgLviiDgeTbFh1XOpN7qFN0WRbFrY8xsWhTu7V5wBGChvUIymiKb6GGueItI
      fO/RWxAEBqf78DyPRrFFvV5H13Vs2w4C0nbogEVRZGJokjsr11F1hfvfzTNxcRhBEJDlx2tC
      tSom+dsVvJzH2OgYoiCwVljr7AXZto2u608XDfo0tNtt/vXHfyI6sD14rlU0+XTqb7qUkAF+
      /e2/0DaquI7HpHyKM6feAoJ5siwHLtZr16/x3YNvWBdXGNbHuDT+PpIoMT42Djy/SiYvmmq1
      SqvV6oQqhD3jZiqVyraFvuM4/Onml8h9Hlo0uLdW26KwWKJnOIOidXc4rZrJiD/D0EAQHOe6
      LrVaDUVRiEQi/OnqV0Sm9iFethrho3Of8rtr/4K8/5x0SnNVPp75ObIsE41GHzstK5YL3Hh4
      lYgfI2/MdfYe9pLU932IV3q4dOa9zohSrVZpNBqd5JxOgv+LmALthCAILK0t4SjmNu+BEpFZ
      W1pjtHe886Xq9Rp3SzfQkyqtVZtP3v5pp0GEGUqCINDb20t/cpCc1k9PrIfB3iF+/+VvuTF/
      laXSPG6LTgreQUbTtM5DDY17K6ZpbmswoigymB2mtthktbxEtVDHrJv0TeS2jQohhpUkmUh2
      Ph8e89rNqzSipX3pefpNgenhY6T1LA9W7u3q6fM8D7vt0Ci1cNclxpLTpFOZIBHHePxaLaJH
      Ge0fp91qU2Kt03Z2e55WwyHd7ufCiYtd91HTNDRN60wvXdflm6tfvLgp0FYkSeIn5/+Ka3cv
      c3/pFtFcENEXYsZq/PLP/0RKzVKzK5QbJfSsTGXJJCsO7DrP9DyPv9z8M+l4lvcuvMe//vaX
      NOstHM8klUlxc/Y6AvDt5T8xNTLD2TNnkSRpzyLTr4pwaN6N3eL5JUnixMwpWj+aCJPNXRs+
      BGsCVdnewFVVRYtoxHv2VynTijS5de8mx6dOkJ3vp+kVu8IWHMvBXhFJKmmiWgxVVxmYCEKr
      ZVneV+PfTC7Xy483WyT74ru+x6xZzMTOMj22c1i8oijouk673aZcLkPWfnkGAMGDOnv8Aqfd
      s9y4f427SzeI9CjIioykSkh90KCACDRv1vHKGkkrx6effbbrMUVR5KMLH+M88gz89U9/gSAI
      rK+vk81uaMtk0lni8Tie5x3Ixg9BD99oNDp1i7eGFG8d8jcbgiiKGLEopry7yxkC5W0t9exT
      3vxSgbLwDSMDo5wYOc2vv/9nVF8nFo3Rdtr4iLx78sNOx1WtVhEEAV3Xn2p9FovFAhWKXXaT
      WwWL8/3vdaZ2OyEIAqqqYts2/f39zN6483INIESSJM7MnOXk5Gnuzd5lPj9L1SmR0XKYXhsv
      3sZ1PBAEamaVcrncaRShb3rzTUgkNubF4es9PT1dr2Wz3RPVZ1FqeBFUKmX+5cf/ihqViVkZ
      zs283RkNOqK3jzw34dAeXn9oFHWnyl4+IcdyyLj9pJIbC+zws7Zjk19fw+h5vDvaalloUZVk
      Ls7dB3c5feI0l6beR1FUNG1ntYb+/n5UVX0mjaa03oNDd0lcz/VpLTq8PbV34w+RJAnDMIJI
      AzKvxgA2X8yxqeMc43jnNc/z+N1XvyY7YGGkojRbPu12m3a73QnpHRkZ2bdPezcOUuMH+PHO
      X+idDNYqtmXy/c3vOD5ysrMmCFUVwv2S8J48WLxPTS7gCs6jMqO7j27mis+F46c3Asw2uRJv
      P7hF9Li4Y8jFVkqrVXzPY+3hOvdW5onFDEaHxigUCp2AvPD+RqPRZ274IWfGzvHVwm+Jpjee
      fatk8ldv//t9FzkP243vBzFEr9QAdkIURX764c+5N3uXUqPI6dOjWJbVURdIJBJomrY9te4p
      qVarJBKJx7/xBTOUGeHza79GNzSSvXGcuIXjOp3FaidE3LIwTRNBEEgmkww5Q9ypl0j1pqiu
      16kW6iiaTLthBkksshhUfXFcpJZKtVYlZnTX43Uch3VzmbSyc53erTi2SywdJZ4x8CY8vrz1
      O4rltxgbnOgsqhVF2XGf4VnIZLIYD1J4fmvDJawE+yePMwDLsigWi/T3B2HkgiDwztn3D54B
      QHBx0xMbCxnf96lUKl2FIPZq/OuFdX7/5W85d+oCoiAyMTGBbduduBZVVcnn8+RyuS559FdJ
      Jp1lInkcRVCpL9SQNVg317EtuxMnJAgClUqFbDbb+f49mRyCf5Zrl6/Q1poMnezH930SuTi2
      6QQhv4/i8RvlJl9/9yU//0m3RqokSciOtue0cH22hKRJiDJEYhqJbHA9oirSM57m8y9/R3/P
      IEODQ9sC2jbv/j8r471T3Gr9sFGlsi3tq7xtsVhkaXmpYwAQjE4H0gC2IggCsViMf/zd32No
      MX7y7s92zAO4NXuT2yvXKBQLiLbClbXvQIH1ap5YJEYu28vly5eJJQ0UUaXeqDMxPvEKvtF2
      0uk0n37wExYXF7ftjK6vr9NsNSmWigz2D2JZFn+58x2SIlJYKXJy/DQfXPiI7x581fkM0PGZ
      h1QLdfRM0FNu3kW1bZveWD+F2iKKFmwyhZ91XQ9RFEhIGSr1Ek2rzsijmPwQq22jyirRSKSj
      92qaZicF1TCM55a3MTY8zr3vb4FuB/fJ2V+SkyzLnDh+ouu1RqPxehgABL1UXE3SjFb458//
      H37+wd9Qa9RYWJljcmSKaMTg5vIVjEENr+gS19JEegKtmrKzTBm4O3cNqV/EFMrk75b4LPvz
      V/21uhAEgcHBQQqFAvl8HoBUKoVptXno3EbPqFxdXsF3wFRa9I5n8ZoW+dYqyWYKIt6uXqJa
      sYFneUSFBK1WqzONbLfbWJbF2Og4+bsrOJ6ILkcp2uv4okdG6MURLE6OneHh3EPWU/Ndi29B
      EIinDSYvjnBv7h7jbtChbHZUPM99JkEQ6IsNsuI+oFlp4xc0ZuceMD66d0eWTm8XTLv38O7r
      YwCCIPDzT3/B/OI8/++Nf+If/vBfUDWVHq2ff/z874noUTLHgzmsoitofXQEmEK/uNGz4X4b
      OtvLFz/+AdM2mZk8dmAWxWFoguM4lEqlRwtLD1ESHsXNB9lRyw+CRJdoPEKpWuDB8j1i49vd
      i0FPD9X1GoPHe6nNBrIilmVRrVaJx+MkEgl83yclZzF0g8GBoY6CQ9h4fd9nrbxCvG/jHJsN
      QTNU8v48izcekpKz5FK99PU+u+dnJ6bHjrF4+SGTyVMUeta5vPIdfbn+Pd2rgiCwsrLCwMBA
      57qL5cLL2wl+XiQTSS6cfhu77hKPJvjw0kfMLTzEGJM7WjWiJFJcKmM2zY6+5VZ8z2dteQ07
      1cArS2Qz2QNjBKEXJYyZuT9/l/j4xveo5GtEEkFiUbPawmt5GJH4jkFshcUS1fU68YyBFlVp
      1U1ipIJ9A8Po6p0zqQySJGPb9o4Nt9Vu0Rbru1aJl1UJLSVjaU1qa036sgMkEonnnoctyzKT
      AzP09vSxUljCTbahKtOT3T3vIVw/hYtzgKH+4ZcXC/Si8H2fu/fvcM+7ui3uxXVcVu7laTXa
      jJ8Z7soVLa1UQPCJZwyapTZGK42RMNDFCOdPvb2j+OvLxnVdSqUS84tzzFl3iPdF8VyP9YUi
      sUwMNaJQX21jtJOcmD5JqVpkpb2I8qgd5OcLxNJRPNcnmtDxXA91JcWx8eO7ntP3/WBu/Chp
      Hro34q7c/hFvsLlrYo7ruIhrUc5MnCMajXYW7y+K5dVl7i3d4sLxdx4bBh+uSdbya+R6cmia
      9vpMgXajXq9TrdVwVKcjmx6GXIuiSN9UDyv38kiKFNwAy0WURERJYPbKIjPvjFOvNfAzPl6y
      SXFOZCg/gqIopNPpV1pcQ5IkMpkgbub+V3fRlSRxPcVg3zQrpSX6lH5mLh7v7GyPMc7D+Qxf
      P/gcq2FhNk2yQ2nEUDJRFHDcjaShWq3WmeaEihEQTMOazSaWZXVFi5qmSUuqsXR5kcHpPoxk
      NNDrdD2spoNQVYnJCU5MBCrVL6M2w0DfAAN9A/t6b6ht9Oe7XyMs+UynTr3+I4DjOPxw+QeW
      lPtE4oErT5KkrqSJ4lKZZC6oen7n2wdEEhqZgSSyKlFZa4AIkYSGHtdoztu8O/Exf7rxBW8f
      f5eJsZ2V0l42+9332LxjXCwV+ePt3xAf2tg4qq+1GFePo8gqnueRyWQeifY62zw14bGu3v8R
      IeLRdlo4skXPcJrKWo1WzQTfxyp7vHPsQ3I9wdAjiiLpdPrA5mRUKmW+vfcVbfE18gLtxlp+
      lQX73rYgLkkKevx6sUllrYqsyKT6EuiGRqovTjQZod0wkWSRWNbg9p8eYCR1VCL85d63RMYl
      7izcYmxk/ECUWNrvNQiC0GnIPdke4n6apWtz+IpHRDDwZY97a3e5dOZdTDOIG9pNLymMnbEE
      k/RwlCgKy/eD9MRELkYiFxT/0Fcy9OZ6O6HGiUTiuXp+njeVSpXJ1HF+XPrTwTWAsIjCXjdy
      vbjOd7e/puE3MFx9W5h1rdBg7voCUxdHWb6bp1aoEctEiKWDuaJuaDRKgYGc+ngKAWGTTpHM
      mrXI2tpa1+bJ64RlmXi2R0SLkhjVWb9T5e2h9zqlifYTlLa4ukCk/1Hyuut16rltJQx0i8Vi
      B6LD2IvR0VFm52aZyZw5uAbw9Tdfk0wkOXbs2K5D6f3lOxjjCnIzQf5hgdJalZETAxipYDRw
      LIfJCyPohsbEuZ0DpbLDOxfU8H2fhRsr/LryL7x98l2GB4df+ILuefNwfo56rEC6J7huJRaE
      gYcG8LiG6vs++fYS0ZyGKIqszq7TN7Fz9stWycWDztjIGHfuvKJo0P0wNRX0yKZp7mgApmmy
      VJ8jEY+iGxp94z14rke92MD3fYxUlOxQmvlbiwzFnzxwThAELvy7U7TrJt/N/5EbtQhiTePC
      9DuMjYw/h2/44qm3a8QyRrCAbVrEchGKpSLp1P7m557n4VYFbn3xgFguGgTAzRZJDyQ62WeC
      INBwaiQSidem8cOjXOVE/OAaQF9v355/FwSBxoKJlpRp1dq0Gyb9kzkEUWDlfp5aoU6j3CLR
      +2SJF1vj8PWYRmTmUQRhj8+vvv5n+ub6yEZ7URWVvsxAR3v/oHHm2Fv8/uoKJbOEUUsjKhL9
      0/00Go3O5tdelMtlTKdNPGcwdLzvkVaQT3G5RGW1FuxEN+Dc9MUDP+3Zif7+geevC/SyaLQa
      NK0GZsvCdVz6J3OIUuC7H5jqJZlLUFwuY+yhoLwTWxvFVrmNobd70IahnlmjEJvnh9KXfH31
      i206nQdBhl1RFD468VOy/gATo1McnziB4zhdKaV7EYvFKNvrJHJGJ1dZFAV6hjIkMnHyc0VS
      Uo7B/sE9j3OQeW3doLPzD7ha/pZqsU7fWE9n8er7PquzedSoQiShd0rovEg818MvKsTEJB+e
      /+TA9Yau63LlypWOjKVhGPu6J67r8vX935Od2Flxr5qvMyIc4+LbF5/3Jb80DtaTegJ6MjkU
      K0LfeE+XwrRjObieR7I3jqo/33j03RAlESnnUjXWWFhceOHne1IkSWJkZKSz4VUulzv7JLZt
      b0u93Py5qLxHjoAnvHbyM1t5bQ0gZsT45ORfYRW6VcPWHhZ29VS8aGRVotqsvJJzP45kMolh
      GBiGQSqVolarUalUqNVqFAqFLkMI8X2f4fgE1fzOCtOxngj1du1lXP4L47U1AAgSGiaTx7uU
      hvvGe8g/LHbEXTfzohWk7ZZDT2r/QrQvk1BJGjbyK2KxGJlMhmQyueOa5d78He7UrlIvN1i+
      t4Zrb98DOMgbXvvhtTYAgKmxGezixkORlMDXvXhzlYXrj+TTmxaNBw6lO409jtTN5mrm4b+t
      BtX1fsej1x+hv+/gbpptXpuEecbh647jbGvcTbdOZiTB4Ewf2aE0S38pUl/d0EYXJZGitbbn
      fdkJy7Ke+DMvitfbfAke5GhyihV3FoSgoaYHkqQHkqzOrrP8Q5ETI2cYOTbKlbs/4m/KJ92L
      cMdzszz4bvieT7yW49K595/jN3u+CEIwXw/DHzYTho3cvHWTulXl1NSZoIqMa6L4wTpK1RUG
      egeoFMosN9YQRAHf87FqLuap/e0qhzzvXOFn4bU3AIATk6dYujyHmAmmQqEyQe9YlprWpC8b
      9MrTw8e4/vAyltYk3hfZs2DffgO5PMejPm/x2YfvH5iHuhNhIZGdCKNnTadNZEbgx/zXiL6E
      UxVo3G7QdzyN53ooogaGS+9wFkEUEUWB2lpzV5evbdsdVYut5zsovPZTIAhGgcFoUGMgrJAS
      /iw4Ysf7YUQNLh17nwu9HyAuGjSWnr2eQKtq8dlbvziwYlshrVaroyaxFd/3+X7+K7yhJpIs
      khlMkRqKExmVkI1H2VNLZdKxNCkp0FvqhFhLgabQVkLN0VZrl3IyB4RDYQAAU2NT2IUNee3w
      nyZsqKyF/3Rd59TkW2jmc6gj4PLMGkUvg516/82bYZqhEo13Z88ZqQhaTGX+5jKiJHLfvIHs
      q1TnNxq1pIjbju37gZaTaZpYlnWgy1cdGgOIRKJ8fOxnqIU4zVJ7w7eN2FWQYzMxNUF1rkmj
      /PS9lCCDZR/syjSbF/BhyHKY8Rb+LuzQFPLzBdaXSkE9B1Eg0WvQarcQlI37GBOSnbCVUNq9
      XC5TqwXu0YO+yXoo1gAhhmHw4blPKRQL/DD7LX7aQnA2FlxbK5FMjk0xyRRfXP8t0eTTSSX6
      ptARrzqolMtlvrr6OZIgo0tRwMfzfZJGkoSRRNd14laWpTuBLEqqL0FptYoaVRgZTuP7PqXl
      CvVSAzfukcjFadcs9HacMxNvdzoY13WpVLr3QXaSeT9IHCoDgKBx92R7+CT+M/7xt/83vtTs
      vL55KhS+BjAcn6DiLD9RAbqQnD5woB8wBI3Qi9toWQGHjY2r1VaZh1WT5W/W0BMqoiIiiAL3
      L88zONPXKTwtCAKaoeLbgYetVTE5nb7I2KnxbbFSm9lpAXzQONhX9wxoqsbowBiLzn3q9Tqx
      WLClHxrAvfk7rJureIKLWbXI9e8sj7hVkXkzru3Smzj4BmAYBmPRaVbch4jSxrWqEQU1otAs
      N4Oq7I/wfR+2fCWzYRFPG7TXbS6NfExfbvt+x1ZFOF3fWZEDNoqBb6bVbhHRX25oxaFZA+yE
      pmgIIrTN7jm+4zis+HPExlUSYxFsrb3j5x/XsMWKzsTIwcgZfhzHxk5glfYXoTo43UdpsYLn
      bRi+bTqomoLmR+nt2TlUfas7dCel6LADWl9f3/b5l9344RCPAAACAtFkhKWlBVpmi3KthCbr
      rJaX0Sc23Jau45GfK5Lo2V4BfecSPD52y2E6efLAD/EhkUiEifhxFp27iJsUoNfnijvW+x2Y
      yvHwxwUiCR1ZlYgYGqIkUnFLFArr9PR0h3z4vt9Z+EJ3bvJODA8fjByKQz0ClNvBw61JRa5X
      v6c9WmReuo16wmV9oYj/qIcbOTVAZihFYbEMdK8XNuNYLoVbdfxFjWFmOD59Yts5DzITQ5M0
      y92jndm0GJjq7XrN931qxQaJnEFuLEWz2iSVC6aI0bROtV7d8fibe/vdFOH2k4fwMnk9uq+n
      xPFtPNejWqsSHwgSYxJ9wVogPZZg8f4yqqKRG80gyRJ6TGf57hqDM31djd/3few8DGgT/M3P
      Lxy4eP/9Iooigvf4xlcvN/F8l+xwoLrcP5UjP1+gd6yHVsUksUN+QEdB4lGx8oPu/Qk51Abg
      +i7thomWVNCM7p1aWZXITWaw2jb3L88xcWaEzGCSW1/dp28y19lX4s86AAAJsUlEQVTp9H0f
      YV3jF+d/cWB1bvZLJBLBEBLAxs5ts9aiWQ3WSOW1KqquYLZM+qc3pji+7wfvyau8O3yRnmzP
      1kN3jm/bdpeq3EHnUBtA024gaEHG1m6ouoIe1RBEgVatjRKTaJSaxLPBLrHn+kympl/7xh+i
      y1HabPjqVV1h5UEeLarSO5HBbFikh4LpTjgNFFYimGseZ9+72FV6aiuSFGj1vw49f8ihNYBG
      o4GvOlTWahj9u4cquI6LZVos3l3BMgNFNSPZ3XuFpTUPA8OZMW60vkdSg91gWZXIDqfQIiqC
      KOwoJuwkGugZZUeJ8a28To0fDrEBPFi4j6SJoHioke29d9i7SbLE4Kle2nUTs6TSN9adTebW
      fSbGXw9X534YHxln4duH3Fi5SjSuI8lScH82tVvf97FaDu28Q3xYQ09rTIvHXtu1z14cWgNw
      XYfqep1Y3/aAt627l7bpUJ6rMX5muMv7Y7VsTqUvbavO/jojCALvnvuAvL+EnlGQFanjvw89
      NJ7nIa1HGY/1M1e+TcxL8uH5T1+73n0/HD6TfkSpXcT13G3hDVvLD0Ggoe8YFssP1rrWC1oj
      zvjIwSih9DzRNI2cOoDySC5elmVkWe7IpUiShGXUmfNvI8sS50YvPXeN/4PCoTUAXdaDND82
      wqDDqEjHcTopj57nYTs2Rl8EO2ly7+ZDHMtBqKh8cPKTQ9nrAZybukh9PVjbhKmfnud1vm8k
      o6EbKjOxt+jN7S1S9jpzaA1AlARkWcE27U6jt227q+G7rotlBcJaAIouow8rPLyyxLnBdzGi
      +ysb+jriuEE9hc2dgyAIuK4bZIfVbCa105yYOPWqL/WFcmjXAKVWgYihged3hvadqr4oioJr
      e/iuHzQIx+fC+HsdrfvDSiqZwip4RFMiruXgVH1EX8b1XHoifcwMn6R/h4C3w8ahNIBmq0nd
      q9CsNUn3BD7t3TwYvu/Tnxxk2B6nadWJqwneOfXuy7zcV4Ioivzbd/8bbs5eZzAzTP+xfiRJ
      2rNW8GHkUBrArQfXSfTFKORLj32YgiCgD0sk3RQfHf/kJV3hwSAej/POW+91vfYmNX44hGuA
      ZrPJbPEepeUK6dHtVeB3iu6UZJHV+uLLuLwjDhiHzgCq1Spi3Huiobxdsjg9cv4FX9kRB5FD
      NwVKJBJYsw4IdMKdt+I6HpW7TXLZXtJalpmxE2TSmZd8pUccBA6dAViWhSxLFNer5Hp3jl1x
      bZe3x97jzMm3XvLVHXHQOHRToIeLQTkfpO1ToHbFor3qYJc8sundoxqPeHM4dCNAq9nm5rcP
      UHPbt+490+eT0b8ilU4RjTxZ5ZgjDieHbgRYK64imDKisn0BLEbh//iH/4xjv/ryRUccDA6V
      ATiOg2/D0LF+JGH7VxPbCv/L//S/kkjsLIFyxJvHoZoCOY7Dj99fJjUWwxEsshOpjuKB7/to
      boRUMvWKr/KIg8ShMgDLsnAcGzUmo8piR/7ccz0ixTRnJy+84is84qBxqAzg7v07+LpHbixD
      pVzteIHMksNfn/mMaPRo4XtEN4dmDeD7Pr4Hx89Ok8jFOiHOAFpa4cubv2dtfe0VXuERB5FD
      MwIIgkCtWuPW93dpM0hmciONUZQEakaB9VKe3p7ePY5yxJvGoRoB/vLDX4jlokiq2JUK6doe
      I94MJ6ZOvsIrPOJJ2azk/aI4NAYAIKsyzUoLQfO79C/dgsDbx985lKoGhxnP82i1Wi/UCA5N
      ixAEgXQyjdm0upQd7IrHucGjxv86IkkS0Wj0heYoHKpWMTw8jGf7tAo27XpQt8pwkkyPzez4
      ft/3O+VQj3gzOTSLYABd0/Edn9m/LIAyhBppInpVWq3WNq3KsGyoZVlomnbga1kd8WI4VCPA
      2bNn6evvJxLXkRwZoSlTfFDdsRhDqF8fj8ePGv8bzKEygEgkwuTEJNV8nWa5TXPNJD2S4OHy
      7I7vP2ha9Ue8fA6VAQiCwN/93d/R3zvA8p01ludW8VyXBf8uD5dmX+i5Xdd9/JuOOHAI7Xbb
      P2xTgGazwf/193/Ples/ohoquak00XiEEW2K/twA586ee+7nDOvwHnmbXi8OpQFAsMi9c/cO
      n3/+BxrNBh9/9AkXzgfBcEfTniNCDq0BhPi+T7lcRlGUTqnUI44IOfQGcMQRe3E0YT3ijebI
      AI54ozkygCPeaI4M4Ig3miMDOOKN5sgAjnijOTKAI95ojgyAjTCGI9483mgDCBNhjkIj3lze
      aAPY3PDDUqFHvFm80QYAQRizaZpHjf8N5VClRO6HsKH7vk+73cZxHHRd37GE6hGHnzfOAMIC
      2Y7jIIoisVgMURSPRoA3lDduCuT7Pq1WC1EU0TStk8By1Pu/ObTbbSzLAt6wEcD3fRzHwXXd
      I9fnSyZUeTsIedjhDMD3/TfLACzLotVqAUEvIAjCNrmUI54v4VrLNM1OpxOLxVAU5YUYQqj1
      FK7ptp4j/LvjOEFBxed+BQcM3/c7N77dbnfN9Y8S2V8sYa8fdjoh9XqdVCr13A3A932azSam
      GYiihXpPtm131nye5+E4GyWyDr0BhG5OQRC6Grwoiui6/gqv7PASdjimae7ayVSrVXRdf27P
      ICiO4nQaf3j+zb/vxKE3AN/30XWdWq3W9bosy8jyof/6Lx3XdWm1Wp2Gv5sBeJ5Hs9mk2Wwi
      iiKqquK6LoqiIEkSoiju20HheR71ev2prvfQtwBFUTr/b+4NjtyezxfHcWi1Wp3F5ZPgeR7t
      dhsA27a7/mYYxq7KfeHnHtfL78WhN4CQrQ/FcRw8zzvS8XkCHMdBkqSuHjlc5G5dXz0vQmeF
      4zhomoYkbdR9aDabHXfm03KgDSB0mz0NjUYDQRB2rQv2MoovHAZ838e2bXzfp9FooCgKhmF0
      Oo7NnrUXgeu6nemNZVkkk0kEQdi2mH1aDrQBPG3jdxwHQRBot9tomkar1do2tKqq2tWbvI48
      aTSr67q4rouqqvs+R71e77p3tm1Tq9XQdR1Zll+qJy306IXTreexl3OgDeBJMU0TWZaRJKkz
      LwynOjtNgZ5lhDkINBoNfN/HMIxt05KQ0CcOgefF931kWcbzPDRNw/O8bfshYa9vmuaOvazr
      ujQaDXRdf6b595Pi+z71ev25Gt2hEsYKH7zjOB2vz+ZqMVvZa4F1kAivP4xjChvo5vlv2MhF
      UeyMgE8yxRNFsWMYb1LRkEMzAoSNItzh2/z6bhz0cIgwdCOsk7VXzxd+l/D/p/HEPOuC8nXk
      UBnA5qE8dKu9rmzd1TzixSBvXRy+7jQajX03/q07hwcJ27ZfeyN+Hfj/AZvZfGNMXcKIAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Medalha/País' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Medalha/País bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Medals/Sport' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Olympics Presentation' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='24' name='Sheet 6' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACmElEQVRYhe2YS0gVcRTGf6Pjvd00e2iQRWEYqVBJbYQQFGwhkhU9oI0LpTatyog2dqFF
      QQ8KatED0qyIsJdQllIk5CK1As1KJEwjlKx8ZN7H3HmcFlLh9fpYDA3h/VYzcz6+883HcObw
      V0REmMWIcdqA04gG4LQBpxENwGkDTiMagNMGnEY0AKcNOI1oAE4bcBqzPgDVNqWheoKPj6P3
      D4CaROz6c3hyslAGK/BVncEK52deZF5BDlh+rO5bhFrvY3gOklCYN3kP4ytmx21C7dVIWhVz
      s1P/1qbT+fGU4AMv+rcRcK9Eza/Ek54MYgsaJVDllVBv/9it1iXavUIJfIrMNptKJdCtj123
      7BPfszoxtSfir22Ysotev138r5vF7L8i/qbu8ZpT6ZgtEri8W4I9v/31iTk8KiIiNgWgi5hh
      jzoPif9DBKr5QgJ3b06gizRMG8AfDEwMYCod6/1+GW3siMi2aQao46dJsA3tbQJxKyYyrTdX
      kcwt/3T4mH2DqBkZEWv2zQAADOTzJQJN4C7yEusKK1vv0LvW4toRb2/b6aCZWG178XW+wtJ0
      SNyEq+Ao7mXz7QxAw2w+TIgSPLuyUCIwpLMKM60Mt31NZ4yYdC9zcpejqAYyUEOw5jxGSbl9
      X6LVWo6+8Aie7MgvDz2E2hNxrVtiV8sZI3bpYsRIQVEBVJSkncSltGEO27YHvCT0cQOu1UmT
      U3puYK7ag+rA5qFk5CPPT2H81AADGbiDPpSHuggUERsORYev4as8OeFfH7PxIfHZqcAXQtUn
      ULadJS5sLhiP1hDoDBfciufAMdTBCny14CkuJYYetOubCX0PoyaXEV9cijWVDiC9FQTrLmCM
      GCgLcnEVncaVrNoUwH+MWb8K/wKBLaEqzRiQGAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
